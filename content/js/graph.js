/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 589.0, "minX": 0.0, "maxY": 63616.0, "series": [{"data": [[0.0, 589.0], [0.1, 596.0], [0.2, 600.0], [0.3, 602.0], [0.4, 604.0], [0.5, 605.0], [0.6, 607.0], [0.7, 609.0], [0.8, 611.0], [0.9, 612.0], [1.0, 613.0], [1.1, 615.0], [1.2, 616.0], [1.3, 618.0], [1.4, 621.0], [1.5, 622.0], [1.6, 624.0], [1.7, 626.0], [1.8, 627.0], [1.9, 628.0], [2.0, 629.0], [2.1, 631.0], [2.2, 634.0], [2.3, 636.0], [2.4, 638.0], [2.5, 639.0], [2.6, 642.0], [2.7, 644.0], [2.8, 646.0], [2.9, 646.0], [3.0, 649.0], [3.1, 651.0], [3.2, 654.0], [3.3, 658.0], [3.4, 661.0], [3.5, 664.0], [3.6, 669.0], [3.7, 673.0], [3.8, 680.0], [3.9, 685.0], [4.0, 689.0], [4.1, 692.0], [4.2, 694.0], [4.3, 699.0], [4.4, 703.0], [4.5, 707.0], [4.6, 715.0], [4.7, 718.0], [4.8, 723.0], [4.9, 728.0], [5.0, 737.0], [5.1, 743.0], [5.2, 750.0], [5.3, 754.0], [5.4, 759.0], [5.5, 764.0], [5.6, 767.0], [5.7, 771.0], [5.8, 777.0], [5.9, 783.0], [6.0, 787.0], [6.1, 792.0], [6.2, 798.0], [6.3, 803.0], [6.4, 809.0], [6.5, 816.0], [6.6, 822.0], [6.7, 828.0], [6.8, 833.0], [6.9, 838.0], [7.0, 847.0], [7.1, 855.0], [7.2, 863.0], [7.3, 869.0], [7.4, 876.0], [7.5, 883.0], [7.6, 892.0], [7.7, 905.0], [7.8, 915.0], [7.9, 924.0], [8.0, 931.0], [8.1, 937.0], [8.2, 944.0], [8.3, 951.0], [8.4, 955.0], [8.5, 961.0], [8.6, 965.0], [8.7, 971.0], [8.8, 975.0], [8.9, 979.0], [9.0, 981.0], [9.1, 986.0], [9.2, 991.0], [9.3, 998.0], [9.4, 1002.0], [9.5, 1012.0], [9.6, 1016.0], [9.7, 1019.0], [9.8, 1026.0], [9.9, 1031.0], [10.0, 1035.0], [10.1, 1037.0], [10.2, 1039.0], [10.3, 1041.0], [10.4, 1044.0], [10.5, 1047.0], [10.6, 1048.0], [10.7, 1050.0], [10.8, 1051.0], [10.9, 1052.0], [11.0, 1053.0], [11.1, 1055.0], [11.2, 1057.0], [11.3, 1059.0], [11.4, 1062.0], [11.5, 1063.0], [11.6, 1066.0], [11.7, 1068.0], [11.8, 1070.0], [11.9, 1072.0], [12.0, 1073.0], [12.1, 1076.0], [12.2, 1077.0], [12.3, 1079.0], [12.4, 1081.0], [12.5, 1084.0], [12.6, 1086.0], [12.7, 1088.0], [12.8, 1090.0], [12.9, 1095.0], [13.0, 1100.0], [13.1, 1103.0], [13.2, 1107.0], [13.3, 1114.0], [13.4, 1119.0], [13.5, 1129.0], [13.6, 1133.0], [13.7, 1137.0], [13.8, 1139.0], [13.9, 1141.0], [14.0, 1144.0], [14.1, 1148.0], [14.2, 1151.0], [14.3, 1153.0], [14.4, 1155.0], [14.5, 1156.0], [14.6, 1158.0], [14.7, 1160.0], [14.8, 1161.0], [14.9, 1163.0], [15.0, 1164.0], [15.1, 1166.0], [15.2, 1168.0], [15.3, 1170.0], [15.4, 1173.0], [15.5, 1176.0], [15.6, 1178.0], [15.7, 1180.0], [15.8, 1183.0], [15.9, 1184.0], [16.0, 1187.0], [16.1, 1189.0], [16.2, 1192.0], [16.3, 1195.0], [16.4, 1198.0], [16.5, 1201.0], [16.6, 1206.0], [16.7, 1209.0], [16.8, 1214.0], [16.9, 1219.0], [17.0, 1223.0], [17.1, 1232.0], [17.2, 1237.0], [17.3, 1245.0], [17.4, 1256.0], [17.5, 1264.0], [17.6, 1278.0], [17.7, 1301.0], [17.8, 1314.0], [17.9, 1323.0], [18.0, 1344.0], [18.1, 1352.0], [18.2, 1360.0], [18.3, 1370.0], [18.4, 1375.0], [18.5, 1381.0], [18.6, 1387.0], [18.7, 1390.0], [18.8, 1392.0], [18.9, 1399.0], [19.0, 1403.0], [19.1, 1406.0], [19.2, 1410.0], [19.3, 1412.0], [19.4, 1416.0], [19.5, 1418.0], [19.6, 1420.0], [19.7, 1423.0], [19.8, 1424.0], [19.9, 1426.0], [20.0, 1428.0], [20.1, 1430.0], [20.2, 1432.0], [20.3, 1433.0], [20.4, 1437.0], [20.5, 1440.0], [20.6, 1441.0], [20.7, 1443.0], [20.8, 1444.0], [20.9, 1445.0], [21.0, 1446.0], [21.1, 1448.0], [21.2, 1449.0], [21.3, 1450.0], [21.4, 1451.0], [21.5, 1452.0], [21.6, 1453.0], [21.7, 1454.0], [21.8, 1456.0], [21.9, 1457.0], [22.0, 1458.0], [22.1, 1459.0], [22.2, 1461.0], [22.3, 1462.0], [22.4, 1464.0], [22.5, 1465.0], [22.6, 1468.0], [22.7, 1469.0], [22.8, 1472.0], [22.9, 1475.0], [23.0, 1477.0], [23.1, 1478.0], [23.2, 1480.0], [23.3, 1484.0], [23.4, 1486.0], [23.5, 1489.0], [23.6, 1491.0], [23.7, 1494.0], [23.8, 1496.0], [23.9, 1499.0], [24.0, 1503.0], [24.1, 1506.0], [24.2, 1508.0], [24.3, 1510.0], [24.4, 1514.0], [24.5, 1516.0], [24.6, 1518.0], [24.7, 1520.0], [24.8, 1522.0], [24.9, 1524.0], [25.0, 1525.0], [25.1, 1527.0], [25.2, 1529.0], [25.3, 1531.0], [25.4, 1533.0], [25.5, 1534.0], [25.6, 1536.0], [25.7, 1539.0], [25.8, 1540.0], [25.9, 1543.0], [26.0, 1544.0], [26.1, 1546.0], [26.2, 1548.0], [26.3, 1549.0], [26.4, 1552.0], [26.5, 1553.0], [26.6, 1555.0], [26.7, 1558.0], [26.8, 1560.0], [26.9, 1562.0], [27.0, 1563.0], [27.1, 1564.0], [27.2, 1566.0], [27.3, 1567.0], [27.4, 1568.0], [27.5, 1570.0], [27.6, 1572.0], [27.7, 1574.0], [27.8, 1575.0], [27.9, 1577.0], [28.0, 1579.0], [28.1, 1581.0], [28.2, 1582.0], [28.3, 1584.0], [28.4, 1585.0], [28.5, 1586.0], [28.6, 1588.0], [28.7, 1589.0], [28.8, 1591.0], [28.9, 1593.0], [29.0, 1594.0], [29.1, 1595.0], [29.2, 1596.0], [29.3, 1599.0], [29.4, 1600.0], [29.5, 1601.0], [29.6, 1603.0], [29.7, 1605.0], [29.8, 1606.0], [29.9, 1607.0], [30.0, 1609.0], [30.1, 1612.0], [30.2, 1614.0], [30.3, 1616.0], [30.4, 1618.0], [30.5, 1620.0], [30.6, 1623.0], [30.7, 1626.0], [30.8, 1627.0], [30.9, 1629.0], [31.0, 1631.0], [31.1, 1634.0], [31.2, 1636.0], [31.3, 1640.0], [31.4, 1642.0], [31.5, 1644.0], [31.6, 1647.0], [31.7, 1649.0], [31.8, 1652.0], [31.9, 1653.0], [32.0, 1654.0], [32.1, 1656.0], [32.2, 1658.0], [32.3, 1659.0], [32.4, 1662.0], [32.5, 1665.0], [32.6, 1667.0], [32.7, 1668.0], [32.8, 1670.0], [32.9, 1672.0], [33.0, 1674.0], [33.1, 1676.0], [33.2, 1679.0], [33.3, 1680.0], [33.4, 1682.0], [33.5, 1683.0], [33.6, 1685.0], [33.7, 1687.0], [33.8, 1689.0], [33.9, 1691.0], [34.0, 1692.0], [34.1, 1694.0], [34.2, 1695.0], [34.3, 1697.0], [34.4, 1699.0], [34.5, 1701.0], [34.6, 1704.0], [34.7, 1706.0], [34.8, 1708.0], [34.9, 1712.0], [35.0, 1715.0], [35.1, 1718.0], [35.2, 1722.0], [35.3, 1724.0], [35.4, 1727.0], [35.5, 1729.0], [35.6, 1732.0], [35.7, 1734.0], [35.8, 1737.0], [35.9, 1740.0], [36.0, 1742.0], [36.1, 1747.0], [36.2, 1753.0], [36.3, 1758.0], [36.4, 1761.0], [36.5, 1766.0], [36.6, 1767.0], [36.7, 1771.0], [36.8, 1775.0], [36.9, 1782.0], [37.0, 1786.0], [37.1, 1793.0], [37.2, 1797.0], [37.3, 1801.0], [37.4, 1805.0], [37.5, 1809.0], [37.6, 1811.0], [37.7, 1814.0], [37.8, 1818.0], [37.9, 1819.0], [38.0, 1823.0], [38.1, 1824.0], [38.2, 1828.0], [38.3, 1830.0], [38.4, 1837.0], [38.5, 1841.0], [38.6, 1843.0], [38.7, 1848.0], [38.8, 1853.0], [38.9, 1856.0], [39.0, 1861.0], [39.1, 1863.0], [39.2, 1868.0], [39.3, 1873.0], [39.4, 1880.0], [39.5, 1887.0], [39.6, 1894.0], [39.7, 1902.0], [39.8, 1907.0], [39.9, 1917.0], [40.0, 1922.0], [40.1, 1925.0], [40.2, 1931.0], [40.3, 1937.0], [40.4, 1945.0], [40.5, 1950.0], [40.6, 1959.0], [40.7, 1964.0], [40.8, 1973.0], [40.9, 1981.0], [41.0, 1995.0], [41.1, 2008.0], [41.2, 2019.0], [41.3, 2027.0], [41.4, 2031.0], [41.5, 2036.0], [41.6, 2042.0], [41.7, 2046.0], [41.8, 2054.0], [41.9, 2059.0], [42.0, 2061.0], [42.1, 2066.0], [42.2, 2070.0], [42.3, 2075.0], [42.4, 2080.0], [42.5, 2084.0], [42.6, 2088.0], [42.7, 2094.0], [42.8, 2098.0], [42.9, 2103.0], [43.0, 2108.0], [43.1, 2113.0], [43.2, 2117.0], [43.3, 2122.0], [43.4, 2123.0], [43.5, 2128.0], [43.6, 2133.0], [43.7, 2142.0], [43.8, 2156.0], [43.9, 2170.0], [44.0, 2186.0], [44.1, 2200.0], [44.2, 2227.0], [44.3, 2253.0], [44.4, 2266.0], [44.5, 2274.0], [44.6, 2287.0], [44.7, 2294.0], [44.8, 2302.0], [44.9, 2314.0], [45.0, 2328.0], [45.1, 2347.0], [45.2, 2359.0], [45.3, 2371.0], [45.4, 2389.0], [45.5, 2417.0], [45.6, 2458.0], [45.7, 2496.0], [45.8, 2561.0], [45.9, 2578.0], [46.0, 2611.0], [46.1, 2628.0], [46.2, 2654.0], [46.3, 2670.0], [46.4, 2682.0], [46.5, 2693.0], [46.6, 2712.0], [46.7, 2727.0], [46.8, 2751.0], [46.9, 2776.0], [47.0, 2791.0], [47.1, 2816.0], [47.2, 2836.0], [47.3, 2882.0], [47.4, 2906.0], [47.5, 2927.0], [47.6, 2968.0], [47.7, 3053.0], [47.8, 3111.0], [47.9, 3174.0], [48.0, 3259.0], [48.1, 3606.0], [48.2, 4595.0], [48.3, 4702.0], [48.4, 4748.0], [48.5, 4825.0], [48.6, 4872.0], [48.7, 4930.0], [48.8, 5228.0], [48.9, 6761.0], [49.0, 60551.0], [49.1, 60553.0], [49.2, 60555.0], [49.3, 60555.0], [49.4, 60556.0], [49.5, 60556.0], [49.6, 60557.0], [49.7, 60557.0], [49.8, 60557.0], [49.9, 60558.0], [50.0, 60558.0], [50.1, 60558.0], [50.2, 60558.0], [50.3, 60559.0], [50.4, 60559.0], [50.5, 60559.0], [50.6, 60559.0], [50.7, 60559.0], [50.8, 60560.0], [50.9, 60560.0], [51.0, 60560.0], [51.1, 60560.0], [51.2, 60560.0], [51.3, 60560.0], [51.4, 60561.0], [51.5, 60561.0], [51.6, 60561.0], [51.7, 60561.0], [51.8, 60561.0], [51.9, 60561.0], [52.0, 60561.0], [52.1, 60561.0], [52.2, 60562.0], [52.3, 60562.0], [52.4, 60562.0], [52.5, 60562.0], [52.6, 60562.0], [52.7, 60562.0], [52.8, 60562.0], [52.9, 60563.0], [53.0, 60563.0], [53.1, 60563.0], [53.2, 60563.0], [53.3, 60563.0], [53.4, 60563.0], [53.5, 60563.0], [53.6, 60563.0], [53.7, 60563.0], [53.8, 60563.0], [53.9, 60564.0], [54.0, 60564.0], [54.1, 60564.0], [54.2, 60564.0], [54.3, 60564.0], [54.4, 60564.0], [54.5, 60564.0], [54.6, 60564.0], [54.7, 60564.0], [54.8, 60564.0], [54.9, 60565.0], [55.0, 60565.0], [55.1, 60565.0], [55.2, 60565.0], [55.3, 60565.0], [55.4, 60565.0], [55.5, 60565.0], [55.6, 60565.0], [55.7, 60565.0], [55.8, 60565.0], [55.9, 60566.0], [56.0, 60566.0], [56.1, 60566.0], [56.2, 60566.0], [56.3, 60566.0], [56.4, 60566.0], [56.5, 60566.0], [56.6, 60566.0], [56.7, 60566.0], [56.8, 60567.0], [56.9, 60567.0], [57.0, 60567.0], [57.1, 60567.0], [57.2, 60567.0], [57.3, 60567.0], [57.4, 60567.0], [57.5, 60567.0], [57.6, 60567.0], [57.7, 60567.0], [57.8, 60567.0], [57.9, 60567.0], [58.0, 60567.0], [58.1, 60568.0], [58.2, 60568.0], [58.3, 60568.0], [58.4, 60568.0], [58.5, 60568.0], [58.6, 60568.0], [58.7, 60568.0], [58.8, 60568.0], [58.9, 60568.0], [59.0, 60568.0], [59.1, 60568.0], [59.2, 60569.0], [59.3, 60569.0], [59.4, 60569.0], [59.5, 60569.0], [59.6, 60569.0], [59.7, 60569.0], [59.8, 60569.0], [59.9, 60569.0], [60.0, 60569.0], [60.1, 60569.0], [60.2, 60569.0], [60.3, 60569.0], [60.4, 60569.0], [60.5, 60569.0], [60.6, 60570.0], [60.7, 60570.0], [60.8, 60570.0], [60.9, 60570.0], [61.0, 60570.0], [61.1, 60570.0], [61.2, 60570.0], [61.3, 60570.0], [61.4, 60570.0], [61.5, 60570.0], [61.6, 60570.0], [61.7, 60570.0], [61.8, 60571.0], [61.9, 60571.0], [62.0, 60571.0], [62.1, 60571.0], [62.2, 60571.0], [62.3, 60571.0], [62.4, 60571.0], [62.5, 60571.0], [62.6, 60571.0], [62.7, 60571.0], [62.8, 60571.0], [62.9, 60571.0], [63.0, 60571.0], [63.1, 60571.0], [63.2, 60571.0], [63.3, 60572.0], [63.4, 60572.0], [63.5, 60572.0], [63.6, 60572.0], [63.7, 60572.0], [63.8, 60572.0], [63.9, 60572.0], [64.0, 60572.0], [64.1, 60572.0], [64.2, 60572.0], [64.3, 60572.0], [64.4, 60572.0], [64.5, 60572.0], [64.6, 60573.0], [64.7, 60573.0], [64.8, 60573.0], [64.9, 60573.0], [65.0, 60573.0], [65.1, 60573.0], [65.2, 60573.0], [65.3, 60573.0], [65.4, 60573.0], [65.5, 60573.0], [65.6, 60573.0], [65.7, 60573.0], [65.8, 60573.0], [65.9, 60573.0], [66.0, 60573.0], [66.1, 60574.0], [66.2, 60574.0], [66.3, 60574.0], [66.4, 60574.0], [66.5, 60574.0], [66.6, 60574.0], [66.7, 60574.0], [66.8, 60574.0], [66.9, 60574.0], [67.0, 60574.0], [67.1, 60574.0], [67.2, 60574.0], [67.3, 60574.0], [67.4, 60574.0], [67.5, 60574.0], [67.6, 60574.0], [67.7, 60574.0], [67.8, 60575.0], [67.9, 60575.0], [68.0, 60575.0], [68.1, 60575.0], [68.2, 60575.0], [68.3, 60575.0], [68.4, 60575.0], [68.5, 60575.0], [68.6, 60575.0], [68.7, 60575.0], [68.8, 60576.0], [68.9, 60576.0], [69.0, 60576.0], [69.1, 60576.0], [69.2, 60576.0], [69.3, 60576.0], [69.4, 60576.0], [69.5, 60576.0], [69.6, 60576.0], [69.7, 60576.0], [69.8, 60576.0], [69.9, 60576.0], [70.0, 60577.0], [70.1, 60577.0], [70.2, 60577.0], [70.3, 60577.0], [70.4, 60577.0], [70.5, 60577.0], [70.6, 60577.0], [70.7, 60577.0], [70.8, 60577.0], [70.9, 60577.0], [71.0, 60577.0], [71.1, 60577.0], [71.2, 60578.0], [71.3, 60578.0], [71.4, 60578.0], [71.5, 60578.0], [71.6, 60578.0], [71.7, 60578.0], [71.8, 60578.0], [71.9, 60578.0], [72.0, 60578.0], [72.1, 60578.0], [72.2, 60578.0], [72.3, 60578.0], [72.4, 60578.0], [72.5, 60578.0], [72.6, 60579.0], [72.7, 60579.0], [72.8, 60579.0], [72.9, 60579.0], [73.0, 60579.0], [73.1, 60579.0], [73.2, 60579.0], [73.3, 60579.0], [73.4, 60580.0], [73.5, 60580.0], [73.6, 60580.0], [73.7, 60580.0], [73.8, 60580.0], [73.9, 60580.0], [74.0, 60580.0], [74.1, 60580.0], [74.2, 60580.0], [74.3, 60580.0], [74.4, 60581.0], [74.5, 60581.0], [74.6, 60581.0], [74.7, 60581.0], [74.8, 60581.0], [74.9, 60581.0], [75.0, 60581.0], [75.1, 60581.0], [75.2, 60582.0], [75.3, 60582.0], [75.4, 60582.0], [75.5, 60582.0], [75.6, 60582.0], [75.7, 60582.0], [75.8, 60582.0], [75.9, 60582.0], [76.0, 60583.0], [76.1, 60583.0], [76.2, 60583.0], [76.3, 60583.0], [76.4, 60583.0], [76.5, 60583.0], [76.6, 60583.0], [76.7, 60584.0], [76.8, 60584.0], [76.9, 60584.0], [77.0, 60584.0], [77.1, 60584.0], [77.2, 60584.0], [77.3, 60584.0], [77.4, 60585.0], [77.5, 60585.0], [77.6, 60585.0], [77.7, 60585.0], [77.8, 60585.0], [77.9, 60585.0], [78.0, 60586.0], [78.1, 60586.0], [78.2, 60586.0], [78.3, 60586.0], [78.4, 60586.0], [78.5, 60586.0], [78.6, 60587.0], [78.7, 60587.0], [78.8, 60587.0], [78.9, 60587.0], [79.0, 60588.0], [79.1, 60588.0], [79.2, 60588.0], [79.3, 60588.0], [79.4, 60588.0], [79.5, 60589.0], [79.6, 60589.0], [79.7, 60589.0], [79.8, 60589.0], [79.9, 60590.0], [80.0, 60590.0], [80.1, 60590.0], [80.2, 60590.0], [80.3, 60591.0], [80.4, 60591.0], [80.5, 60591.0], [80.6, 60591.0], [80.7, 60592.0], [80.8, 60592.0], [80.9, 60592.0], [81.0, 60592.0], [81.1, 60592.0], [81.2, 60593.0], [81.3, 60593.0], [81.4, 60593.0], [81.5, 60593.0], [81.6, 60593.0], [81.7, 60594.0], [81.8, 60594.0], [81.9, 60594.0], [82.0, 60594.0], [82.1, 60594.0], [82.2, 60595.0], [82.3, 60595.0], [82.4, 60595.0], [82.5, 60596.0], [82.6, 60596.0], [82.7, 60597.0], [82.8, 60597.0], [82.9, 60597.0], [83.0, 60598.0], [83.1, 60598.0], [83.2, 60598.0], [83.3, 60599.0], [83.4, 60599.0], [83.5, 60599.0], [83.6, 60600.0], [83.7, 60600.0], [83.8, 60600.0], [83.9, 60600.0], [84.0, 60601.0], [84.1, 60602.0], [84.2, 60602.0], [84.3, 60602.0], [84.4, 60603.0], [84.5, 60603.0], [84.6, 60604.0], [84.7, 60604.0], [84.8, 60604.0], [84.9, 60605.0], [85.0, 60605.0], [85.1, 60605.0], [85.2, 60606.0], [85.3, 60607.0], [85.4, 60607.0], [85.5, 60608.0], [85.6, 60608.0], [85.7, 60609.0], [85.8, 60609.0], [85.9, 60609.0], [86.0, 60610.0], [86.1, 60610.0], [86.2, 60611.0], [86.3, 60611.0], [86.4, 60612.0], [86.5, 60612.0], [86.6, 60613.0], [86.7, 60613.0], [86.8, 60614.0], [86.9, 60614.0], [87.0, 60614.0], [87.1, 60615.0], [87.2, 60615.0], [87.3, 60616.0], [87.4, 60617.0], [87.5, 60617.0], [87.6, 60618.0], [87.7, 60618.0], [87.8, 60619.0], [87.9, 60619.0], [88.0, 60620.0], [88.1, 60620.0], [88.2, 60621.0], [88.3, 60622.0], [88.4, 60622.0], [88.5, 60623.0], [88.6, 60623.0], [88.7, 60624.0], [88.8, 60624.0], [88.9, 60625.0], [89.0, 60626.0], [89.1, 60627.0], [89.2, 60628.0], [89.3, 60629.0], [89.4, 60630.0], [89.5, 60631.0], [89.6, 60633.0], [89.7, 60633.0], [89.8, 60634.0], [89.9, 60635.0], [90.0, 60636.0], [90.1, 60637.0], [90.2, 60638.0], [90.3, 60639.0], [90.4, 60640.0], [90.5, 60641.0], [90.6, 60642.0], [90.7, 60642.0], [90.8, 60644.0], [90.9, 60645.0], [91.0, 60646.0], [91.1, 60647.0], [91.2, 60648.0], [91.3, 60649.0], [91.4, 60650.0], [91.5, 60650.0], [91.6, 60651.0], [91.7, 60652.0], [91.8, 60653.0], [91.9, 60654.0], [92.0, 60655.0], [92.1, 60657.0], [92.2, 60658.0], [92.3, 60660.0], [92.4, 60662.0], [92.5, 60663.0], [92.6, 60665.0], [92.7, 60666.0], [92.8, 60670.0], [92.9, 60672.0], [93.0, 60675.0], [93.1, 60678.0], [93.2, 60681.0], [93.3, 60685.0], [93.4, 60689.0], [93.5, 60692.0], [93.6, 60695.0], [93.7, 60700.0], [93.8, 60703.0], [93.9, 60705.0], [94.0, 60708.0], [94.1, 60711.0], [94.2, 60715.0], [94.3, 60720.0], [94.4, 60727.0], [94.5, 60732.0], [94.6, 60734.0], [94.7, 60741.0], [94.8, 60752.0], [94.9, 60756.0], [95.0, 60762.0], [95.1, 60768.0], [95.2, 60772.0], [95.3, 60777.0], [95.4, 60782.0], [95.5, 60785.0], [95.6, 60793.0], [95.7, 60801.0], [95.8, 60806.0], [95.9, 60813.0], [96.0, 60819.0], [96.1, 60823.0], [96.2, 60830.0], [96.3, 60836.0], [96.4, 60852.0], [96.5, 60859.0], [96.6, 60866.0], [96.7, 60870.0], [96.8, 60873.0], [96.9, 60879.0], [97.0, 60890.0], [97.1, 60895.0], [97.2, 60903.0], [97.3, 60909.0], [97.4, 60915.0], [97.5, 60921.0], [97.6, 60923.0], [97.7, 60926.0], [97.8, 60929.0], [97.9, 60933.0], [98.0, 60938.0], [98.1, 60941.0], [98.2, 60947.0], [98.3, 60949.0], [98.4, 60951.0], [98.5, 60953.0], [98.6, 60957.0], [98.7, 60963.0], [98.8, 60970.0], [98.9, 60978.0], [99.0, 60985.0], [99.1, 60995.0], [99.2, 61005.0], [99.3, 61042.0], [99.4, 61133.0], [99.5, 61400.0], [99.6, 61604.0], [99.7, 61715.0], [99.8, 61899.0], [99.9, 62103.0]], "isOverall": false, "label": "Get availability", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 3352.0, "series": [{"data": [[600.0, 403.0], [700.0, 186.0], [800.0, 137.0], [900.0, 163.0], [1000.0, 352.0], [1100.0, 336.0], [1200.0, 121.0], [1300.0, 118.0], [1400.0, 485.0], [1500.0, 529.0], [1600.0, 488.0], [1700.0, 274.0], [1800.0, 233.0], [1900.0, 135.0], [2000.0, 173.0], [2100.0, 123.0], [2200.0, 66.0], [2300.0, 65.0], [2400.0, 25.0], [2500.0, 22.0], [2600.0, 60.0], [2800.0, 34.0], [2700.0, 44.0], [2900.0, 27.0], [3000.0, 14.0], [3100.0, 18.0], [3200.0, 10.0], [3500.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4500.0, 7.0], [4400.0, 1.0], [4600.0, 8.0], [4700.0, 17.0], [4800.0, 18.0], [4900.0, 7.0], [5000.0, 3.0], [5100.0, 1.0], [5200.0, 4.0], [5700.0, 4.0], [5800.0, 1.0], [6400.0, 1.0], [6700.0, 3.0], [7700.0, 2.0], [8700.0, 1.0], [8600.0, 2.0], [8800.0, 1.0], [9200.0, 1.0], [9500.0, 1.0], [61300.0, 2.0], [60600.0, 978.0], [60700.0, 195.0], [60500.0, 3352.0], [61400.0, 6.0], [60800.0, 142.0], [61000.0, 22.0], [61100.0, 6.0], [60900.0, 193.0], [61200.0, 3.0], [61500.0, 4.0], [61800.0, 5.0], [61700.0, 7.0], [62000.0, 5.0], [61900.0, 4.0], [62100.0, 1.0], [62300.0, 1.0], [61600.0, 8.0], [63600.0, 2.0], [63500.0, 6.0], [500.0, 16.0]], "isOverall": false, "label": "Get availability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 63600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2293.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4984.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2293.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2411.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4984.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.550475921E12, "maxY": 500.0, "series": [{"data": [[1.550476278E12, 500.0], [1.55047645E12, 500.0], [1.550476024E12, 500.0], [1.550476581E12, 2.0], [1.550475942E12, 181.1157024793389], [1.550476155E12, 500.0], [1.550476327E12, 500.0], [1.550476073E12, 500.0], [1.550476458E12, 500.0], [1.550476032E12, 500.0], [1.550475926E12, 47.9245283018868], [1.550476524E12, 468.0], [1.550476098E12, 500.0], [1.55047627E12, 500.0], [1.550476016E12, 500.0], [1.550476401E12, 500.0], [1.550476573E12, 213.00641025641025], [1.550475934E12, 114.62499999999997], [1.550476147E12, 500.0], [1.550476385E12, 500.0], [1.550475959E12, 322.27131782945736], [1.550476344E12, 500.0], [1.550476516E12, 500.0], [1.55047609E12, 500.0], [1.550476262E12, 500.0], [1.550476221E12, 500.0], [1.550476393E12, 500.0], [1.550475967E12, 386.8], [1.550476565E12, 435.0], [1.550476459E12, 500.0], [1.550476033E12, 500.0], [1.550476205E12, 500.0], [1.550475951E12, 256.1223021582735], [1.550476336E12, 500.0], [1.550476508E12, 500.0], [1.550476082E12, 500.0], [1.550476041E12, 500.0], [1.550476213E12, 500.0], [1.550476279E12, 500.0], [1.550476451E12, 500.0], [1.550476025E12, 500.0], [1.550476156E12, 500.0], [1.550475943E12, 189.7830188679245], [1.550476328E12, 500.0], [1.550476566E12, 432.0], [1.55047614E12, 500.0], [1.550475927E12, 55.918032786885234], [1.550476525E12, 460.0], [1.550476099E12, 500.0], [1.550476271E12, 500.0], [1.550476443E12, 500.0], [1.550476402E12, 500.0], [1.550476574E12, 104.68333333333334], [1.550476148E12, 500.0], [1.550475935E12, 122.2247191011236], [1.55047632E12, 500.0], [1.550476214E12, 500.0], [1.550476386E12, 500.0], [1.55047596E12, 330.7925925925924], [1.550476558E12, 441.3333333333333], [1.550476345E12, 500.0], [1.550476517E12, 500.0], [1.550476091E12, 500.0], [1.550476263E12, 500.0], [1.550476222E12, 500.0], [1.550476394E12, 500.0], [1.55047646E12, 500.0], [1.550476034E12, 500.0], [1.550476206E12, 500.0], [1.550475952E12, 263.6336633663368], [1.550476337E12, 500.0], [1.550476509E12, 500.0], [1.550476083E12, 500.0], [1.550476255E12, 500.0], [1.550476022E12, 500.0], [1.550476194E12, 500.0], [1.550476579E12, 15.5], [1.55047594E12, 163.95614035087715], [1.550476153E12, 500.0], [1.550476325E12, 500.0], [1.550476284E12, 500.0], [1.550476456E12, 500.0], [1.55047603E12, 500.0], [1.550476268E12, 500.0], [1.550476399E12, 500.0], [1.550476571E12, 378.64705882352933], [1.550475932E12, 97.12790697674419], [1.550476145E12, 500.0], [1.550476276E12, 500.0], [1.550476448E12, 500.0], [1.550476342E12, 500.0], [1.550476514E12, 500.0], [1.550476088E12, 500.0], [1.550476219E12, 500.0], [1.550476391E12, 500.0], [1.550475965E12, 372.37837837837844], [1.550476563E12, 438.5], [1.550475924E12, 31.08823529411765], [1.550476522E12, 484.5], [1.550476096E12, 500.0], [1.550476203E12, 500.0], [1.550476162E12, 500.0], [1.550475949E12, 238.57763975155277], [1.550476334E12, 500.0], [1.550476506E12, 500.0], [1.55047608E12, 500.0], [1.550476465E12, 500.0], [1.550476039E12, 500.0], [1.550476211E12, 500.0], [1.550476383E12, 500.0], [1.550475957E12, 305.9459459459458], [1.550476449E12, 500.0], [1.550476023E12, 500.0], [1.55047658E12, 7.625], [1.550476154E12, 500.0], [1.550475941E12, 172.93939393939394], [1.550476326E12, 500.0], [1.550476498E12, 500.0], [1.550476072E12, 500.0], [1.550476457E12, 500.0], [1.550476031E12, 500.0], [1.550476523E12, 476.0], [1.550476097E12, 500.0], [1.550476269E12, 500.0], [1.550476441E12, 500.0], [1.5504764E12, 500.0], [1.550476572E12, 326.49295774647885], [1.550476146E12, 500.0], [1.550475933E12, 106.28431372549018], [1.550476277E12, 500.0], [1.550475958E12, 314.25833333333327], [1.550476343E12, 500.0], [1.550476515E12, 500.0], [1.550476089E12, 500.0], [1.550476261E12, 500.0], [1.55047622E12, 500.0], [1.550476392E12, 500.0], [1.550475966E12, 379.2749999999999], [1.550476138E12, 500.0], [1.550475925E12, 39.458333333333336], [1.550476204E12, 500.0], [1.550476376E12, 500.0], [1.55047595E12, 247.6058394160584], [1.550476163E12, 500.0], [1.550476335E12, 500.0], [1.550476507E12, 500.0], [1.550476081E12, 500.0], [1.550476466E12, 500.0], [1.55047604E12, 500.0], [1.550476212E12, 500.0], [1.550476577E12, 33.5], [1.550475938E12, 147.57627118644083], [1.550476151E12, 500.0], [1.550476323E12, 500.0], [1.550476282E12, 500.0], [1.550476454E12, 500.0], [1.550476028E12, 500.0], [1.5504762E12, 500.0], [1.550475946E12, 214.5365853658537], [1.550476159E12, 500.0], [1.550476012E12, 500.0], [1.550476397E12, 500.0], [1.550476569E12, 413.1111111111111], [1.55047593E12, 80.34831460674155], [1.550476143E12, 500.0], [1.550476102E12, 500.0], [1.550476315E12, 500.0], [1.550476274E12, 500.0], [1.550476446E12, 500.0], [1.550476405E12, 500.0], [1.550476086E12, 500.0], [1.550476217E12, 500.0], [1.550476389E12, 500.0], [1.550475963E12, 355.5153846153846], [1.550475922E12, 14.923076923076923], [1.55047652E12, 500.0], [1.550476094E12, 500.0], [1.550476266E12, 500.0], [1.550475947E12, 222.73722627737223], [1.550476332E12, 500.0], [1.550476504E12, 500.0], [1.550476463E12, 500.0], [1.550476037E12, 500.0], [1.550476209E12, 500.0], [1.550476381E12, 500.0], [1.550475955E12, 289.2348484848485], [1.55047634E12, 500.0], [1.550476512E12, 500.0], [1.550476406E12, 500.0], [1.550476578E12, 24.11111111111111], [1.550476152E12, 500.0], [1.550475939E12, 155.95161290322582], [1.550476324E12, 500.0], [1.550476283E12, 500.0], [1.550476455E12, 500.0], [1.550476029E12, 500.0], [1.550476201E12, 500.0], [1.55047616E12, 500.0], [1.550476267E12, 500.0], [1.550476398E12, 500.0], [1.55047657E12, 402.07692307692304], [1.550476144E12, 500.0], [1.550475931E12, 88.92307692307689], [1.550476275E12, 500.0], [1.550476447E12, 500.0], [1.550476021E12, 500.0], [1.550476513E12, 500.0], [1.550476087E12, 500.0], [1.550476259E12, 500.0], [1.550476218E12, 500.0], [1.55047639E12, 500.0], [1.550475964E12, 363.7213114754099], [1.550475923E12, 22.85185185185185], [1.550476521E12, 494.5], [1.550476095E12, 500.0], [1.550475948E12, 230.11881188118818], [1.550476161E12, 500.0], [1.550476333E12, 500.0], [1.550476505E12, 500.0], [1.550476079E12, 500.0], [1.550476464E12, 500.0], [1.550476038E12, 500.0], [1.55047621E12, 500.0], [1.550476382E12, 500.0], [1.550475956E12, 297.1809523809524], [1.550476341E12, 500.0], [1.55047628E12, 500.0], [1.550476452E12, 500.0], [1.550476026E12, 500.0], [1.550476198E12, 500.0], [1.550475944E12, 197.61818181818185], [1.550476157E12, 500.0], [1.550476329E12, 500.0], [1.550476395E12, 500.0], [1.550476567E12, 429.5], [1.550475928E12, 63.65714285714286], [1.550476526E12, 451.59999999999997], [1.5504761E12, 500.0], [1.550476272E12, 500.0], [1.550476444E12, 500.0], [1.550476018E12, 500.0], [1.550476403E12, 500.0], [1.550476575E12, 61.22222222222222], [1.550475936E12, 130.54838709677426], [1.550476149E12, 500.0], [1.550476215E12, 500.0], [1.550476387E12, 500.0], [1.550475961E12, 339.01754385964927], [1.550476133E12, 500.0], [1.550476518E12, 500.0], [1.550476092E12, 500.0], [1.550476264E12, 500.0], [1.550476223E12, 500.0], [1.550476502E12, 500.0], [1.550476461E12, 500.0], [1.550476035E12, 500.0], [1.550476207E12, 500.0], [1.550475953E12, 272.33928571428567], [1.550476338E12, 500.0], [1.55047651E12, 500.0], [1.550476084E12, 500.0], [1.55047615E12, 500.0], [1.550475937E12, 139.50769230769225], [1.550476322E12, 500.0], [1.550476281E12, 500.0], [1.550476453E12, 500.0], [1.550476027E12, 500.0], [1.550476199E12, 500.0], [1.550476158E12, 500.0], [1.550475945E12, 206.57600000000008], [1.55047633E12, 500.0], [1.550476396E12, 500.0], [1.550476568E12, 422.5], [1.550476142E12, 500.0], [1.550475929E12, 72.08139534883719], [1.550476527E12, 444.5], [1.550476101E12, 500.0], [1.550476273E12, 500.0], [1.550476019E12, 500.0], [1.550476404E12, 500.0], [1.550476576E12, 43.111111111111114], [1.550476216E12, 500.0], [1.550476388E12, 500.0], [1.550475962E12, 347.4715447154471], [1.550475921E12, 8.5], [1.550476519E12, 500.0], [1.550476093E12, 500.0], [1.550476265E12, 500.0], [1.550476437E12, 500.0], [1.550476331E12, 500.0], [1.550476077E12, 500.0], [1.550476462E12, 500.0], [1.550476036E12, 500.0], [1.550476208E12, 500.0], [1.550475954E12, 280.9055118110235], [1.550476339E12, 500.0], [1.550476511E12, 500.0], [1.550476085E12, 500.0]], "isOverall": false, "label": "GET availability", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.550476581E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 606.4444444444445, "minX": 1.0, "maxY": 61010.0, "series": [{"data": [[2.0, 60560.0], [3.0, 61010.0], [4.0, 60562.0], [5.0, 60570.0], [6.0, 60571.0], [7.0, 60572.0], [8.0, 20637.0], [9.0, 614.0], [10.0, 60576.0], [11.0, 30595.5], [12.0, 60571.0], [13.0, 30591.0], [14.0, 15599.75], [15.0, 12659.2], [16.0, 20609.333333333332], [17.0, 60609.0], [18.0, 20604.666666666668], [19.0, 30610.5], [20.0, 12600.2], [21.0, 10596.166666666666], [22.0, 15589.0], [23.0, 20598.0], [24.0, 12599.8], [25.0, 12606.4], [26.0, 15614.25], [27.0, 634.1666666666667], [28.0, 20603.333333333336], [29.0, 12597.6], [30.0, 15600.0], [31.0, 20595.333333333332], [32.0, 12604.2], [33.0, 60578.0], [34.0, 9282.714285714286], [35.0, 5745.25], [36.0, 10632.166666666666], [37.0, 12620.6], [38.0, 9209.142857142857], [39.0, 30598.5], [40.0, 15608.5], [41.0, 6630.4], [42.0, 6087.272727272727], [43.0, 624.6], [44.0, 20600.333333333336], [45.0, 7281.222222222223], [46.0, 20589.0], [47.0, 7278.888888888889], [48.0, 8106.25], [49.0, 6084.636363636363], [50.0, 9271.857142857143], [51.0, 620.6666666666666], [52.0, 17867.571428571428], [53.0, 10605.0], [54.0, 9230.571428571428], [55.0, 3826.157894736842], [56.0, 9186.285714285714], [57.0, 9183.142857142857], [58.0, 606.4444444444445], [59.0, 20607.0], [60.0, 9238.571428571428], [61.0, 5617.333333333334], [62.0, 4959.071428571428], [63.0, 5666.916666666666], [64.0, 7290.777777777777], [65.0, 638.3333333333333], [66.0, 935.0], [67.0, 17002.272727272728], [68.0, 9264.142857142857], [69.0, 701.8], [70.0, 11606.454545454546], [71.0, 5750.416666666667], [72.0, 3827.789473684211], [73.0, 6612.2], [74.0, 8111.375], [75.0, 8120.5], [76.0, 7331.666666666667], [77.0, 4193.764705882353], [78.0, 5645.666666666666], [79.0, 4435.125], [80.0, 675.0], [81.0, 9889.846153846154], [82.0, 6629.6], [83.0, 662.1666666666666], [84.0, 683.1666666666666], [85.0, 17053.727272727272], [86.0, 4743.333333333333], [87.0, 752.0], [88.0, 742.764705882353], [89.0, 36666.6], [90.0, 6769.5], [91.0, 5380.538461538461], [92.0, 4099.277777777777], [93.0, 6164.818181818182], [94.0, 6746.800000000001], [95.0, 5055.714285714285], [96.0, 4116.888888888889], [97.0, 8222.875], [98.0, 785.5], [99.0, 17898.857142857145], [100.0, 12826.4], [101.0, 4227.444444444444], [102.0, 6373.0], [103.0, 9478.285714285714], [104.0, 4267.894736842105], [105.0, 10908.333333333334], [106.0, 3897.0476190476193], [107.0, 1007.076923076923], [108.0, 17945.285714285714], [109.0, 3833.95], [110.0, 4830.533333333334], [111.0, 10795.333333333334], [112.0, 9446.714285714286], [113.0, 6382.272727272728], [114.0, 6437.818181818182], [115.0, 9535.42857142857], [116.0, 7678.666666666667], [117.0, 6048.333333333334], [118.0, 7746.222222222223], [119.0, 6350.75], [120.0, 1176.5909090909092], [121.0, 10343.076923076922], [122.0, 6575.545454545455], [123.0, 1140.75], [124.0, 11044.833333333332], [125.0, 6570.0], [126.0, 7103.999999999999], [127.0, 7115.1], [128.0, 6102.416666666667], [129.0, 5734.846153846154], [130.0, 5753.384615384616], [131.0, 4671.764705882353], [132.0, 5133.866666666667], [133.0, 4865.25], [134.0, 11026.333333333334], [135.0, 11116.5], [136.0, 1038.375], [137.0, 25020.8], [138.0, 5525.142857142857], [139.0, 1251.7333333333333], [140.0, 4027.025], [141.0, 4691.4375], [142.0, 4700.1875], [143.0, 6398.181818181818], [144.0, 4399.2941176470595], [145.0, 4687.1875], [146.0, 4801.933333333333], [147.0, 6256.181818181818], [148.0, 4398.64705882353], [149.0, 4693.9375], [150.0, 4759.6875], [151.0, 4546.823529411765], [152.0, 5027.533333333333], [153.0, 8507.0], [154.0, 1093.7142857142858], [155.0, 7697.388888888889], [156.0, 5634.3076923076915], [157.0, 4368.388888888889], [158.0, 5022.666666666666], [159.0, 1065.5000000000002], [160.0, 8485.125], [161.0, 6020.833333333334], [162.0, 4367.888888888889], [163.0, 3902.857142857143], [164.0, 1045.2857142857142], [165.0, 1068.0833333333333], [166.0, 10984.333333333332], [167.0, 5652.692307692308], [168.0, 1096.4285714285713], [170.0, 1215.8333333333335], [171.0, 1270.227272727273], [172.0, 1280.2727272727277], [173.0, 17012.666666666668], [174.0, 3764.086956521739], [175.0, 4673.411764705883], [169.0, 60583.0], [176.0, 1175.0000000000002], [177.0, 10318.846153846154], [178.0, 4700.235294117647], [179.0, 5069.9375], [180.0, 5033.733333333334], [181.0, 5672.000000000001], [182.0, 7056.3], [183.0, 1194.0952380952378], [184.0, 7498.57894736842], [185.0, 5493.571428571428], [186.0, 7242.0], [187.0, 7960.555555555556], [188.0, 5677.857142857143], [189.0, 8040.888888888889], [190.0, 4586.894736842105], [191.0, 5132.9375], [192.0, 4720.222222222223], [193.0, 1442.9999999999998], [194.0, 8840.5625], [195.0, 6000.7692307692305], [196.0, 5406.666666666667], [197.0, 5691.571428571428], [198.0, 1516.5], [199.0, 11369.583333333334], [200.0, 4659.263157894737], [201.0, 5425.666666666667], [202.0, 21160.333333333332], [203.0, 11431.333333333334], [204.0, 4537.35], [205.0, 1566.5384615384617], [206.0, 1543.3846153846152], [207.0, 1541.3333333333335], [208.0, 16331.6875], [209.0, 4479.599999999999], [210.0, 5502.200000000001], [211.0, 6350.083333333333], [212.0, 1699.0555555555557], [213.0, 1587.1538461538462], [214.0, 1537.5384615384617], [215.0, 9945.5], [216.0, 5269.666666666667], [217.0, 4851.2941176470595], [218.0, 5090.0625], [219.0, 4901.0], [220.0, 5148.4375], [221.0, 1467.875], [222.0, 8396.588235294117], [223.0, 4797.777777777778], [224.0, 5998.076923076924], [225.0, 1438.142857142857], [226.0, 8001.277777777777], [227.0, 4698.277777777777], [228.0, 4902.058823529412], [229.0, 4408.5], [230.0, 4735.166666666666], [231.0, 5150.875], [232.0, 1462.6000000000001], [233.0, 16613.625], [235.0, 4136.782608695652], [236.0, 3031.4285714285716], [237.0, 1481.4285714285716], [238.0, 9940.928571428572], [239.0, 1543.157894736842], [234.0, 60579.0], [240.0, 1530.6923076923078], [241.0, 9574.59090909091], [242.0, 5052.176470588235], [243.0, 5805.5], [244.0, 4863.666666666667], [245.0, 4391.047619047619], [246.0, 1576.235294117647], [247.0, 9935.42857142857], [248.0, 1401.55], [249.0, 6386.833333333334], [250.0, 4998.0], [251.0, 4543.6], [252.0, 10037.785714285714], [253.0, 1626.5], [254.0, 1637.4], [255.0, 9361.173913043478], [257.0, 1607.0666666666666], [256.0, 4907.222222222222], [258.0, 1610.4], [259.0, 12377.941176470587], [260.0, 1620.95], [261.0, 1571.1874999999998], [262.0, 1543.8999999999999], [263.0, 8999.208333333332], [264.0, 13398.8], [270.0, 4413.333333333333], [271.0, 1674.0], [268.0, 1852.0], [269.0, 1886.3055555555552], [265.0, 4718.578947368421], [266.0, 1632.0909090909088], [267.0, 60576.5], [273.0, 1682.9411764705883], [272.0, 6780.314285714285], [274.0, 10509.6], [275.0, 1622.2941176470588], [276.0, 5327.1875], [277.0, 7543.75], [278.0, 2012.4375000000005], [279.0, 1606.3529411764705], [280.0, 1704.8333333333333], [286.0, 9359.8125], [287.0, 2340.2], [284.0, 8192.222222222223], [285.0, 1716.3529411764705], [281.0, 14396.105263157895], [282.0, 5093.823529411765], [283.0, 1563.0714285714287], [289.0, 1835.1052631578948], [288.0, 5899.25], [290.0, 9543.933333333334], [291.0, 5599.8], [292.0, 5141.823529411765], [293.0, 1682.7333333333331], [294.0, 1838.8461538461538], [295.0, 1780.857142857143], [296.0, 10034.81818181818], [302.0, 9679.4], [303.0, 13516.2], [300.0, 7750.400000000001], [301.0, 1690.5], [297.0, 1856.7272727272727], [298.0, 10840.550000000001], [299.0, 1831.5555555555557], [305.0, 1997.772727272727], [304.0, 2260.6060606060605], [306.0, 2254.142857142857], [307.0, 11793.291666666666], [308.0, 2027.0], [309.0, 1996.9166666666665], [310.0, 11507.277777777777], [311.0, 7756.727272727272], [312.0, 6368.5], [318.0, 1923.7272727272727], [319.0, 1743.2105263157896], [316.0, 6326.25], [317.0, 10106.866666666667], [313.0, 4172.758620689655], [314.0, 6604.666666666666], [315.0, 2230.666666666667], [321.0, 4807.360000000001], [320.0, 17827.272727272728], [322.0, 2320.8333333333335], [323.0, 10157.375], [324.0, 2304.7142857142853], [325.0, 2096.772727272727], [326.0, 14471.857142857143], [327.0, 6336.923076923076], [328.0, 4667.666666666666], [334.0, 5196.888888888889], [335.0, 5497.375], [332.0, 5733.117647058823], [333.0, 5799.3125], [329.0, 5394.470588235294], [330.0, 6451.428571428572], [331.0, 4980.5], [337.0, 7851.299999999999], [336.0, 5344.117647058823], [338.0, 5787.722222222222], [339.0, 5698.277777777778], [340.0, 2065.076923076923], [341.0, 12711.363636363636], [342.0, 6052.533333333333], [343.0, 6198.928571428572], [344.0, 9335.25], [350.0, 5128.666666666666], [351.0, 5966.733333333334], [348.0, 3747.470588235294], [349.0, 16357.384615384613], [345.0, 5998.8125], [346.0, 4453.200000000001], [347.0, 2720.294117647059], [353.0, 2595.5714285714284], [352.0, 5536.222222222222], [354.0, 9614.70588235294], [355.0, 6326.470588235294], [356.0, 6588.5], [357.0, 6150.133333333333], [358.0, 5937.764705882353], [359.0, 5332.0526315789475], [360.0, 2364.8571428571427], [366.0, 7204.214285714286], [367.0, 5528.789473684211], [364.0, 2213.866666666667], [365.0, 14291.400000000001], [361.0, 8603.388888888889], [362.0, 5921.799999999999], [363.0, 2634.6111111111113], [369.0, 8074.1], [368.0, 7263.25], [370.0, 7118.0], [371.0, 6136.4], [372.0, 6801.866666666667], [373.0, 6450.8], [374.0, 5817.052631578947], [375.0, 6742.0], [376.0, 6017.3125], [382.0, 7445.75], [383.0, 60574.0], [380.0, 6734.285714285714], [381.0, 7221.0], [377.0, 2391.416666666667], [378.0, 10864.642857142859], [379.0, 5840.882352941177], [397.0, 60558.0], [385.0, 5975.5], [388.0, 19038.0], [389.0, 60580.0], [391.0, 60579.0], [384.0, 60576.0], [390.0, 60571.0], [399.0, 60558.0], [396.0, 60574.0], [387.0, 60600.0], [386.0, 60579.0], [395.0, 60578.0], [394.0, 60580.0], [393.0, 60578.0], [392.0, 60578.0], [414.0, 60578.5], [415.0, 60573.0], [412.0, 60578.0], [403.0, 60578.0], [402.0, 60571.0], [401.0, 60576.0], [400.0, 60567.0], [411.0, 60568.0], [410.0, 60575.0], [409.0, 60578.0], [408.0, 60578.0], [407.0, 60578.0], [406.0, 60577.0], [405.0, 60568.0], [404.0, 60578.0], [430.0, 60583.0], [431.0, 60585.0], [429.0, 60579.0], [428.0, 60582.0], [427.0, 60594.0], [426.0, 60613.0], [425.0, 60585.0], [424.0, 60571.0], [423.0, 60575.0], [417.0, 60571.0], [416.0, 60577.0], [419.0, 60602.0], [418.0, 60572.0], [422.0, 60587.0], [421.0, 60588.0], [420.0, 60596.0], [446.0, 60563.0], [447.0, 60575.0], [445.0, 60562.0], [444.0, 60572.0], [443.0, 60574.0], [442.0, 60586.5], [440.0, 60584.0], [439.0, 60576.0], [433.0, 60569.0], [432.0, 60581.0], [435.0, 60575.0], [434.0, 60585.0], [438.0, 60567.0], [437.0, 60579.0], [436.0, 60574.0], [462.0, 60588.0], [463.0, 60580.0], [461.0, 60583.0], [460.0, 60574.0], [459.0, 60570.0], [458.0, 60562.0], [457.0, 60575.0], [456.0, 60573.0], [454.0, 60563.0], [449.0, 60571.0], [448.0, 60570.0], [451.0, 60583.0], [450.0, 60575.0], [453.0, 60573.0], [452.0, 60562.0], [478.0, 60634.0], [479.0, 60570.0], [477.0, 60633.0], [476.0, 60559.0], [475.0, 60572.0], [474.0, 60566.0], [473.0, 60561.0], [472.0, 60559.0], [471.0, 60560.0], [465.0, 60566.0], [464.0, 60568.0], [467.0, 60568.0], [466.0, 60568.0], [470.0, 60554.0], [469.0, 60569.0], [468.0, 60571.0], [494.0, 60572.0], [495.0, 60580.0], [493.0, 60573.0], [492.0, 60579.0], [491.0, 60578.0], [490.0, 60575.0], [489.0, 60576.0], [488.0, 60570.0], [487.0, 60568.0], [481.0, 60562.0], [480.0, 60561.0], [483.0, 60567.0], [482.0, 60558.0], [486.0, 60559.0], [485.0, 60571.0], [484.0, 60557.0], [500.0, 60638.47445419758], [499.0, 60575.0], [498.0, 60569.0], [497.0, 60569.0], [496.0, 60574.0], [1.0, 60556.0]], "isOverall": false, "label": "Get availability", "isController": false}, {"data": [[350.8287572254345, 31687.429913294793]], "isOverall": false, "label": "Get availability-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 270.0, "minX": 1.550475921E12, "maxY": 129804.0, "series": [{"data": [[1.550476278E12, 8206.0], [1.55047645E12, 44014.0], [1.550476024E12, 14174.0], [1.550476581E12, 2238.0], [1.550475942E12, 69938.0], [1.550476155E12, 6714.0], [1.550476327E12, 7460.0], [1.550476073E12, 1492.0], [1.550476458E12, 5222.0], [1.550476032E12, 6714.0], [1.550475926E12, 30634.0], [1.550476524E12, 6714.0], [1.550476098E12, 5968.0], [1.55047627E12, 45506.0], [1.550476016E12, 1492.0], [1.550476401E12, 5222.0], [1.550476573E12, 116376.0], [1.550475934E12, 41616.0], [1.550476147E12, 89520.0], [1.550476385E12, 2984.0], [1.550475959E12, 74562.0], [1.550476344E12, 5222.0], [1.550476516E12, 6714.0], [1.55047609E12, 5968.0], [1.550476262E12, 1492.0], [1.550476221E12, 5968.0], [1.550476393E12, 10444.0], [1.550475967E12, 2892.0], [1.550476565E12, 3730.0], [1.550476459E12, 5968.0], [1.550476033E12, 5968.0], [1.550476205E12, 8952.0], [1.550475951E12, 80344.0], [1.550476336E12, 6714.0], [1.550476508E12, 1492.0], [1.550476082E12, 8206.0], [1.550476041E12, 3730.0], [1.550476213E12, 6714.0], [1.550476279E12, 6714.0], [1.550476451E12, 67886.0], [1.550476025E12, 101456.0], [1.550476156E12, 5222.0], [1.550475943E12, 61268.0], [1.550476328E12, 17158.0], [1.550476566E12, 746.0], [1.55047614E12, 4476.0], [1.550475927E12, 35262.0], [1.550476525E12, 5222.0], [1.550476099E12, 6714.0], [1.550476271E12, 10444.0], [1.550476443E12, 2984.0], [1.550476402E12, 6714.0], [1.550476574E12, 44760.0], [1.550476148E12, 74600.0], [1.550475935E12, 51444.0], [1.55047632E12, 1492.0], [1.550476214E12, 5968.0], [1.550476386E12, 8206.0], [1.55047596E12, 78030.0], [1.550476558E12, 2238.0], [1.550476345E12, 2984.0], [1.550476517E12, 5968.0], [1.550476091E12, 7460.0], [1.550476263E12, 746.0], [1.550476222E12, 6714.0], [1.550476394E12, 8206.0], [1.55047646E12, 6714.0], [1.550476034E12, 6714.0], [1.550476206E12, 9698.0], [1.550475952E12, 58380.0], [1.550476337E12, 5222.0], [1.550476509E12, 11190.0], [1.550476083E12, 5222.0], [1.550476255E12, 2238.0], [1.550476022E12, 2984.0], [1.550476194E12, 2238.0], [1.550476579E12, 5968.0], [1.55047594E12, 65892.0], [1.550476153E12, 5968.0], [1.550476325E12, 8206.0], [1.550476284E12, 2984.0], [1.550476456E12, 6714.0], [1.55047603E12, 7460.0], [1.550476268E12, 64902.0], [1.550476399E12, 5968.0], [1.550476571E12, 25364.0], [1.550475932E12, 49708.0], [1.550476145E12, 10444.0], [1.550476276E12, 5968.0], [1.550476448E12, 8952.0], [1.550476342E12, 8952.0], [1.550476514E12, 26110.0], [1.550476088E12, 42522.0], [1.550476219E12, 5222.0], [1.550476391E12, 78330.0], [1.550475965E12, 64158.0], [1.550476563E12, 1492.0], [1.550475924E12, 19655.0], [1.550476522E12, 7460.0], [1.550476096E12, 5968.0], [1.550476203E12, 2984.0], [1.550476162E12, 5968.0], [1.550475949E12, 93060.0], [1.550476334E12, 7460.0], [1.550476506E12, 746.0], [1.55047608E12, 1492.0], [1.550476465E12, 5968.0], [1.550476039E12, 5968.0], [1.550476211E12, 8206.0], [1.550476383E12, 2984.0], [1.550475957E12, 85545.0], [1.550476449E12, 9698.0], [1.550476023E12, 10444.0], [1.55047658E12, 5968.0], [1.550476154E12, 6714.0], [1.550475941E12, 76296.0], [1.550476326E12, 6714.0], [1.550476498E12, 2238.0], [1.550476072E12, 746.0], [1.550476457E12, 5968.0], [1.550476031E12, 5968.0], [1.550476523E12, 5222.0], [1.550476097E12, 5968.0], [1.550476269E12, 129804.0], [1.550476441E12, 1492.0], [1.5504764E12, 7460.0], [1.550476572E12, 52966.0], [1.550476146E12, 58934.0], [1.550475933E12, 58960.0], [1.550476277E12, 4476.0], [1.550475958E12, 69360.0], [1.550476343E12, 5222.0], [1.550476515E12, 8206.0], [1.550476089E12, 6714.0], [1.550476261E12, 2984.0], [1.55047622E12, 7460.0], [1.550476392E12, 26856.0], [1.550475966E12, 46240.0], [1.550476138E12, 1492.0], [1.550475925E12, 27748.0], [1.550476204E12, 8206.0], [1.550476376E12, 2238.0], [1.55047595E12, 79186.0], [1.550476163E12, 746.0], [1.550476335E12, 5968.0], [1.550476507E12, 9698.0], [1.550476081E12, 2238.0], [1.550476466E12, 5222.0], [1.55047604E12, 5968.0], [1.550476212E12, 6714.0], [1.550476577E12, 7460.0], [1.550475938E12, 68204.0], [1.550476151E12, 5968.0], [1.550476323E12, 1492.0], [1.550476282E12, 5968.0], [1.550476454E12, 13428.0], [1.550476028E12, 8206.0], [1.5504762E12, 2984.0], [1.550475946E12, 71094.0], [1.550476159E12, 5968.0], [1.550476012E12, 2238.0], [1.550476397E12, 6714.0], [1.550476569E12, 6714.0], [1.55047593E12, 51443.0], [1.550476143E12, 7460.0], [1.550476102E12, 2238.0], [1.550476315E12, 2238.0], [1.550476274E12, 5968.0], [1.550476446E12, 5222.0], [1.550476405E12, 5968.0], [1.550476086E12, 91012.0], [1.550476217E12, 5968.0], [1.550476389E12, 42522.0], [1.550475963E12, 75142.0], [1.550475922E12, 7514.0], [1.55047652E12, 3730.0], [1.550476094E12, 5968.0], [1.550476266E12, 10444.0], [1.550475947E12, 79186.0], [1.550476332E12, 10444.0], [1.550476504E12, 2984.0], [1.550476463E12, 8206.0], [1.550476037E12, 5968.0], [1.550476209E12, 70124.0], [1.550476381E12, 1492.0], [1.550475955E12, 76296.0], [1.55047634E12, 5968.0], [1.550476512E12, 94742.0], [1.550476406E12, 746.0], [1.550476578E12, 6714.0], [1.550476152E12, 6714.0], [1.550475939E12, 71675.0], [1.550476324E12, 2238.0], [1.550476283E12, 6714.0], [1.550476455E12, 6714.0], [1.550476029E12, 6714.0], [1.550476201E12, 1492.0], [1.55047616E12, 5968.0], [1.550476267E12, 11936.0], [1.550476398E12, 5222.0], [1.55047657E12, 9698.0], [1.550476144E12, 8206.0], [1.550475931E12, 52598.0], [1.550476275E12, 5968.0], [1.550476447E12, 5968.0], [1.550476021E12, 8952.0], [1.550476513E12, 71616.0], [1.550476087E12, 79822.0], [1.550476259E12, 1492.0], [1.550476218E12, 6714.0], [1.55047639E12, 102202.0], [1.550475964E12, 70517.0], [1.550475923E12, 15607.0], [1.550476521E12, 7460.0], [1.550476095E12, 6714.0], [1.550475948E12, 58378.0], [1.550476161E12, 5968.0], [1.550476333E12, 5222.0], [1.550476505E12, 1492.0], [1.550476079E12, 2984.0], [1.550476464E12, 5222.0], [1.550476038E12, 6714.0], [1.55047621E12, 12682.0], [1.550476382E12, 1492.0], [1.550475956E12, 60690.0], [1.550476341E12, 4476.0], [1.55047628E12, 4476.0], [1.550476452E12, 105932.0], [1.550476026E12, 93250.0], [1.550476198E12, 746.0], [1.550475944E12, 63580.0], [1.550476157E12, 6714.0], [1.550476329E12, 102948.0], [1.550476395E12, 3730.0], [1.550476567E12, 2984.0], [1.550475928E12, 40462.0], [1.550476526E12, 7460.0], [1.5504761E12, 6714.0], [1.550476272E12, 6714.0], [1.550476444E12, 1492.0], [1.550476018E12, 2984.0], [1.550476403E12, 7460.0], [1.550476575E12, 20142.0], [1.550475936E12, 53754.0], [1.550476149E12, 29840.0], [1.550476215E12, 5968.0], [1.550476387E12, 8206.0], [1.550475961E12, 65892.0], [1.550476133E12, 2238.0], [1.550476518E12, 5968.0], [1.550476092E12, 6714.0], [1.550476264E12, 8952.0], [1.550476223E12, 4476.0], [1.550476502E12, 1492.0], [1.550476461E12, 6714.0], [1.550476035E12, 5968.0], [1.550476207E12, 79822.0], [1.550475953E12, 97105.0], [1.550476338E12, 4476.0], [1.55047651E12, 10444.0], [1.550476084E12, 8952.0], [1.55047615E12, 7460.0], [1.550475937E12, 75140.0], [1.550476322E12, 2984.0], [1.550476281E12, 8206.0], [1.550476453E12, 29840.0], [1.550476027E12, 45506.0], [1.550476199E12, 746.0], [1.550476158E12, 6714.0], [1.550475945E12, 72250.0], [1.55047633E12, 93996.0], [1.550476396E12, 6714.0], [1.550476568E12, 7460.0], [1.550476142E12, 2984.0], [1.550475929E12, 49711.0], [1.550476527E12, 2984.0], [1.550476101E12, 5222.0], [1.550476273E12, 7460.0], [1.550476019E12, 1492.0], [1.550476404E12, 5222.0], [1.550476576E12, 6714.0], [1.550476216E12, 5968.0], [1.550476388E12, 9698.0], [1.550475962E12, 71096.0], [1.550475921E12, 2312.0], [1.550476519E12, 7460.0], [1.550476093E12, 5968.0], [1.550476265E12, 2238.0], [1.550476437E12, 2238.0], [1.550476331E12, 38792.0], [1.550476077E12, 1492.0], [1.550476462E12, 5222.0], [1.550476036E12, 5968.0], [1.550476208E12, 90266.0], [1.550475954E12, 73406.0], [1.550476339E12, 8952.0], [1.550476511E12, 58188.0], [1.550476085E12, 42522.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.550476278E12, 2970.0], [1.55047645E12, 15930.0], [1.550476024E12, 5130.0], [1.550476581E12, 810.0], [1.550475942E12, 32670.0], [1.550476155E12, 2430.0], [1.550476327E12, 2700.0], [1.550476073E12, 540.0], [1.550476458E12, 1890.0], [1.550476032E12, 2430.0], [1.550475926E12, 14310.0], [1.550476524E12, 2430.0], [1.550476098E12, 2160.0], [1.55047627E12, 16470.0], [1.550476016E12, 540.0], [1.550476401E12, 1890.0], [1.550476573E12, 42120.0], [1.550475934E12, 19440.0], [1.550476147E12, 32400.0], [1.550476385E12, 1080.0], [1.550475959E12, 34830.0], [1.550476344E12, 1890.0], [1.550476516E12, 2430.0], [1.55047609E12, 2160.0], [1.550476262E12, 540.0], [1.550476221E12, 2160.0], [1.550476393E12, 3780.0], [1.550475967E12, 1350.0], [1.550476565E12, 1350.0], [1.550476459E12, 2160.0], [1.550476033E12, 2160.0], [1.550476205E12, 3240.0], [1.550475951E12, 37530.0], [1.550476336E12, 2430.0], [1.550476508E12, 540.0], [1.550476082E12, 2970.0], [1.550476041E12, 1350.0], [1.550476213E12, 2430.0], [1.550476279E12, 2430.0], [1.550476451E12, 24570.0], [1.550476025E12, 36720.0], [1.550476156E12, 1890.0], [1.550475943E12, 28620.0], [1.550476328E12, 6210.0], [1.550476566E12, 270.0], [1.55047614E12, 1620.0], [1.550475927E12, 16470.0], [1.550476525E12, 1890.0], [1.550476099E12, 2430.0], [1.550476271E12, 3780.0], [1.550476443E12, 1080.0], [1.550476402E12, 2430.0], [1.550476574E12, 16200.0], [1.550476148E12, 27000.0], [1.550475935E12, 24030.0], [1.55047632E12, 540.0], [1.550476214E12, 2160.0], [1.550476386E12, 2970.0], [1.55047596E12, 36450.0], [1.550476558E12, 810.0], [1.550476345E12, 1080.0], [1.550476517E12, 2160.0], [1.550476091E12, 2700.0], [1.550476263E12, 270.0], [1.550476222E12, 2430.0], [1.550476394E12, 2970.0], [1.55047646E12, 2430.0], [1.550476034E12, 2430.0], [1.550476206E12, 3510.0], [1.550475952E12, 27270.0], [1.550476337E12, 1890.0], [1.550476509E12, 4050.0], [1.550476083E12, 1890.0], [1.550476255E12, 810.0], [1.550476022E12, 1080.0], [1.550476194E12, 810.0], [1.550476579E12, 2160.0], [1.55047594E12, 30780.0], [1.550476153E12, 2160.0], [1.550476325E12, 2970.0], [1.550476284E12, 1080.0], [1.550476456E12, 2430.0], [1.55047603E12, 2700.0], [1.550476268E12, 23490.0], [1.550476399E12, 2160.0], [1.550476571E12, 9180.0], [1.550475932E12, 23220.0], [1.550476145E12, 3780.0], [1.550476276E12, 2160.0], [1.550476448E12, 3240.0], [1.550476342E12, 3240.0], [1.550476514E12, 9450.0], [1.550476088E12, 15390.0], [1.550476219E12, 1890.0], [1.550476391E12, 28350.0], [1.550475965E12, 29970.0], [1.550476563E12, 540.0], [1.550475924E12, 9180.0], [1.550476522E12, 2700.0], [1.550476096E12, 2160.0], [1.550476203E12, 1080.0], [1.550476162E12, 2160.0], [1.550475949E12, 43470.0], [1.550476334E12, 2700.0], [1.550476506E12, 270.0], [1.55047608E12, 540.0], [1.550476465E12, 2160.0], [1.550476039E12, 2160.0], [1.550476211E12, 2970.0], [1.550476383E12, 1080.0], [1.550475957E12, 39960.0], [1.550476449E12, 3510.0], [1.550476023E12, 3780.0], [1.55047658E12, 2160.0], [1.550476154E12, 2430.0], [1.550475941E12, 35640.0], [1.550476326E12, 2430.0], [1.550476498E12, 810.0], [1.550476072E12, 270.0], [1.550476457E12, 2160.0], [1.550476031E12, 2160.0], [1.550476523E12, 1890.0], [1.550476097E12, 2160.0], [1.550476269E12, 46980.0], [1.550476441E12, 540.0], [1.5504764E12, 2700.0], [1.550476572E12, 19170.0], [1.550476146E12, 21330.0], [1.550475933E12, 27540.0], [1.550476277E12, 1620.0], [1.550475958E12, 32400.0], [1.550476343E12, 1890.0], [1.550476515E12, 2970.0], [1.550476089E12, 2430.0], [1.550476261E12, 1080.0], [1.55047622E12, 2700.0], [1.550476392E12, 9720.0], [1.550475966E12, 21600.0], [1.550476138E12, 540.0], [1.550475925E12, 12960.0], [1.550476204E12, 2970.0], [1.550476376E12, 810.0], [1.55047595E12, 36990.0], [1.550476163E12, 270.0], [1.550476335E12, 2160.0], [1.550476507E12, 3510.0], [1.550476081E12, 810.0], [1.550476466E12, 1890.0], [1.55047604E12, 2160.0], [1.550476212E12, 2430.0], [1.550476577E12, 2700.0], [1.550475938E12, 31860.0], [1.550476151E12, 2160.0], [1.550476323E12, 540.0], [1.550476282E12, 2160.0], [1.550476454E12, 4860.0], [1.550476028E12, 2970.0], [1.5504762E12, 1080.0], [1.550475946E12, 33210.0], [1.550476159E12, 2160.0], [1.550476012E12, 810.0], [1.550476397E12, 2430.0], [1.550476569E12, 2430.0], [1.55047593E12, 24030.0], [1.550476143E12, 2700.0], [1.550476102E12, 810.0], [1.550476315E12, 810.0], [1.550476274E12, 2160.0], [1.550476446E12, 1890.0], [1.550476405E12, 2160.0], [1.550476086E12, 32940.0], [1.550476217E12, 2160.0], [1.550476389E12, 15390.0], [1.550475963E12, 35100.0], [1.550475922E12, 3510.0], [1.55047652E12, 1350.0], [1.550476094E12, 2160.0], [1.550476266E12, 3780.0], [1.550475947E12, 36990.0], [1.550476332E12, 3780.0], [1.550476504E12, 1080.0], [1.550476463E12, 2970.0], [1.550476037E12, 2160.0], [1.550476209E12, 25380.0], [1.550476381E12, 540.0], [1.550475955E12, 35640.0], [1.55047634E12, 2160.0], [1.550476512E12, 34290.0], [1.550476406E12, 270.0], [1.550476578E12, 2430.0], [1.550476152E12, 2430.0], [1.550475939E12, 33480.0], [1.550476324E12, 810.0], [1.550476283E12, 2430.0], [1.550476455E12, 2430.0], [1.550476029E12, 2430.0], [1.550476201E12, 540.0], [1.55047616E12, 2160.0], [1.550476267E12, 4320.0], [1.550476398E12, 1890.0], [1.55047657E12, 3510.0], [1.550476144E12, 2970.0], [1.550475931E12, 24570.0], [1.550476275E12, 2160.0], [1.550476447E12, 2160.0], [1.550476021E12, 3240.0], [1.550476513E12, 25920.0], [1.550476087E12, 28890.0], [1.550476259E12, 540.0], [1.550476218E12, 2430.0], [1.55047639E12, 36990.0], [1.550475964E12, 32940.0], [1.550475923E12, 7290.0], [1.550476521E12, 2700.0], [1.550476095E12, 2430.0], [1.550475948E12, 27270.0], [1.550476161E12, 2160.0], [1.550476333E12, 1890.0], [1.550476505E12, 540.0], [1.550476079E12, 1080.0], [1.550476464E12, 1890.0], [1.550476038E12, 2430.0], [1.55047621E12, 4590.0], [1.550476382E12, 540.0], [1.550475956E12, 28350.0], [1.550476341E12, 1620.0], [1.55047628E12, 1620.0], [1.550476452E12, 38340.0], [1.550476026E12, 33750.0], [1.550476198E12, 270.0], [1.550475944E12, 29700.0], [1.550476157E12, 2430.0], [1.550476329E12, 37260.0], [1.550476395E12, 1350.0], [1.550476567E12, 1080.0], [1.550475928E12, 18900.0], [1.550476526E12, 2700.0], [1.5504761E12, 2430.0], [1.550476272E12, 2430.0], [1.550476444E12, 540.0], [1.550476018E12, 1080.0], [1.550476403E12, 2700.0], [1.550476575E12, 7290.0], [1.550475936E12, 25110.0], [1.550476149E12, 10800.0], [1.550476215E12, 2160.0], [1.550476387E12, 2970.0], [1.550475961E12, 30780.0], [1.550476133E12, 810.0], [1.550476518E12, 2160.0], [1.550476092E12, 2430.0], [1.550476264E12, 3240.0], [1.550476223E12, 1620.0], [1.550476502E12, 540.0], [1.550476461E12, 2430.0], [1.550476035E12, 2160.0], [1.550476207E12, 28890.0], [1.550475953E12, 45360.0], [1.550476338E12, 1620.0], [1.55047651E12, 3780.0], [1.550476084E12, 3240.0], [1.55047615E12, 2700.0], [1.550475937E12, 35100.0], [1.550476322E12, 1080.0], [1.550476281E12, 2970.0], [1.550476453E12, 10800.0], [1.550476027E12, 16470.0], [1.550476199E12, 270.0], [1.550476158E12, 2430.0], [1.550475945E12, 33750.0], [1.55047633E12, 34020.0], [1.550476396E12, 2430.0], [1.550476568E12, 2700.0], [1.550476142E12, 1080.0], [1.550475929E12, 23220.0], [1.550476527E12, 1080.0], [1.550476101E12, 1890.0], [1.550476273E12, 2700.0], [1.550476019E12, 540.0], [1.550476404E12, 1890.0], [1.550476576E12, 2430.0], [1.550476216E12, 2160.0], [1.550476388E12, 3510.0], [1.550475962E12, 33210.0], [1.550475921E12, 1080.0], [1.550476519E12, 2700.0], [1.550476093E12, 2160.0], [1.550476265E12, 810.0], [1.550476437E12, 810.0], [1.550476331E12, 14040.0], [1.550476077E12, 540.0], [1.550476462E12, 1890.0], [1.550476036E12, 2160.0], [1.550476208E12, 32670.0], [1.550475954E12, 34290.0], [1.550476339E12, 3240.0], [1.550476511E12, 21060.0], [1.550476085E12, 15390.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.550476581E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 607.3333333333331, "minX": 1.550475921E12, "maxY": 61220.77777777778, "series": [{"data": [[1.550476278E12, 60802.63636363637], [1.55047645E12, 60614.28813559322], [1.550476024E12, 60633.84210526317], [1.550476581E12, 60708.666666666664], [1.550475942E12, 1199.3388429752074], [1.550476155E12, 60581.0], [1.550476327E12, 60583.899999999994], [1.550476073E12, 60571.5], [1.550476458E12, 60580.857142857145], [1.550476032E12, 60571.77777777778], [1.550475926E12, 624.377358490566], [1.550476524E12, 60564.77777777778], [1.550476098E12, 60624.25], [1.55047627E12, 60575.22950819672], [1.550476016E12, 60638.0], [1.550476401E12, 60572.57142857143], [1.550476573E12, 60590.14743589746], [1.550475934E12, 1019.9861111111111], [1.550476147E12, 60670.816666666666], [1.550476385E12, 60589.5], [1.550475959E12, 2202.364341085271], [1.550476344E12, 60573.857142857145], [1.550476516E12, 60605.0], [1.55047609E12, 60580.125], [1.550476262E12, 60569.5], [1.550476221E12, 60591.375], [1.550476393E12, 60569.71428571429], [1.550475967E12, 5507.0], [1.550476565E12, 60576.4], [1.550476459E12, 60573.37499999999], [1.550476033E12, 60569.0], [1.550476205E12, 60568.25000000001], [1.550475951E12, 1665.2949640287766], [1.550476336E12, 60567.77777777778], [1.550476508E12, 60593.0], [1.550476082E12, 60573.090909090904], [1.550476041E12, 60590.2], [1.550476213E12, 60579.88888888889], [1.550476279E12, 60653.44444444445], [1.550476451E12, 60806.76923076922], [1.550476025E12, 60627.70588235294], [1.550476156E12, 60575.0], [1.550475943E12, 1428.905660377359], [1.550476328E12, 60667.26086956521], [1.550476566E12, 60581.0], [1.55047614E12, 60570.33333333333], [1.550475927E12, 649.8360655737705], [1.550476525E12, 60576.0], [1.550476099E12, 60566.88888888889], [1.550476271E12, 60628.92857142857], [1.550476443E12, 60572.25], [1.550476402E12, 60580.666666666664], [1.550476574E12, 60570.51666666666], [1.550476148E12, 60602.12], [1.550475935E12, 1202.4269662921345], [1.55047632E12, 60578.0], [1.550476214E12, 60591.625], [1.550476386E12, 60563.818181818184], [1.55047596E12, 2029.3481481481485], [1.550476558E12, 60585.666666666664], [1.550476345E12, 60569.5], [1.550476517E12, 60563.99999999999], [1.550476091E12, 60572.5], [1.550476263E12, 60565.0], [1.550476222E12, 60579.77777777778], [1.550476394E12, 60599.54545454545], [1.55047646E12, 60573.666666666664], [1.550476034E12, 60569.88888888889], [1.550476206E12, 60601.230769230766], [1.550475952E12, 1631.1089108910894], [1.550476337E12, 60572.57142857143], [1.550476509E12, 60584.13333333333], [1.550476083E12, 60572.42857142857], [1.550476255E12, 60572.333333333336], [1.550476022E12, 60577.5], [1.550476194E12, 60577.333333333336], [1.550476579E12, 60593.125], [1.55047594E12, 1064.6578947368414], [1.550476153E12, 60580.25000000001], [1.550476325E12, 60572.63636363636], [1.550476284E12, 60585.75], [1.550476456E12, 60577.444444444445], [1.55047603E12, 60919.2], [1.550476268E12, 60865.1724137931], [1.550476399E12, 60562.50000000001], [1.550476571E12, 60572.911764705874], [1.550475932E12, 818.0930232558142], [1.550476145E12, 60568.07142857142], [1.550476276E12, 60667.5], [1.550476448E12, 60586.50000000001], [1.550476342E12, 60572.666666666664], [1.550476514E12, 60568.828571428574], [1.550476088E12, 60834.36842105263], [1.550476219E12, 60633.71428571428], [1.550476391E12, 60606.54285714286], [1.550475965E12, 2544.252252252252], [1.550476563E12, 60571.5], [1.550475924E12, 668.1764705882354], [1.550476522E12, 60564.9], [1.550476096E12, 60567.125], [1.550476203E12, 60574.0], [1.550476162E12, 60626.625], [1.550475949E12, 1562.0496894409941], [1.550476334E12, 60560.0], [1.550476506E12, 60568.0], [1.55047608E12, 60570.0], [1.550476465E12, 60571.375], [1.550476039E12, 60575.12499999999], [1.550476211E12, 60843.72727272727], [1.550476383E12, 60574.25], [1.550475957E12, 2048.3918918918926], [1.550476449E12, 60606.307692307695], [1.550476023E12, 60580.42857142857], [1.55047658E12, 60572.875], [1.550476154E12, 60580.777777777774], [1.550475941E12, 1221.7575757575758], [1.550476326E12, 60576.0], [1.550476498E12, 60570.333333333336], [1.550476072E12, 60609.0], [1.550476457E12, 60575.5], [1.550476031E12, 60573.0], [1.550476523E12, 60585.0], [1.550476097E12, 60573.875], [1.550476269E12, 60678.35057471263], [1.550476441E12, 60579.5], [1.5504764E12, 60605.40000000001], [1.550476572E12, 60583.36619718309], [1.550476146E12, 60582.07594936709], [1.550475933E12, 983.0392156862741], [1.550476277E12, 60677.333333333336], [1.550475958E12, 2187.8249999999994], [1.550476343E12, 60572.28571428571], [1.550476515E12, 60559.818181818184], [1.550476089E12, 60617.77777777778], [1.550476261E12, 60573.5], [1.55047622E12, 60720.4], [1.550476392E12, 60676.750000000015], [1.550475966E12, 2543.7625000000007], [1.550476138E12, 60583.0], [1.550475925E12, 643.3958333333331], [1.550476204E12, 60584.0], [1.550476376E12, 60581.0], [1.55047595E12, 1531.9343065693433], [1.550476163E12, 60572.0], [1.550476335E12, 60594.125], [1.550476507E12, 60569.76923076923], [1.550476081E12, 60574.0], [1.550476466E12, 60572.71428571429], [1.55047604E12, 60571.5], [1.550476212E12, 60574.22222222222], [1.550476577E12, 60576.8], [1.550475938E12, 936.4237288135596], [1.550476151E12, 60580.99999999999], [1.550476323E12, 60575.0], [1.550476282E12, 60590.5], [1.550476454E12, 61220.77777777778], [1.550476028E12, 60574.454545454544], [1.5504762E12, 60595.5], [1.550475946E12, 1486.9186991869913], [1.550476159E12, 60584.25], [1.550476012E12, 60617.333333333336], [1.550476397E12, 60571.666666666664], [1.550476569E12, 60575.22222222222], [1.55047593E12, 671.1011235955056], [1.550476143E12, 60570.4], [1.550476102E12, 60572.666666666664], [1.550476315E12, 60573.333333333336], [1.550476274E12, 60691.0], [1.550476446E12, 60573.857142857145], [1.550476405E12, 60569.5], [1.550476086E12, 60589.10655737705], [1.550476217E12, 60707.25], [1.550476389E12, 60568.789473684206], [1.550475963E12, 2559.5538461538486], [1.550475922E12, 629.6153846153846], [1.55047652E12, 60571.8], [1.550476094E12, 60571.375], [1.550476266E12, 60575.85714285714], [1.550475947E12, 1449.0802919708037], [1.550476332E12, 60842.28571428571], [1.550476504E12, 60575.25], [1.550476463E12, 60614.0], [1.550476037E12, 60588.37500000001], [1.550476209E12, 60615.85106382981], [1.550476381E12, 60574.5], [1.550475955E12, 1773.4621212121217], [1.55047634E12, 60576.125], [1.550476512E12, 60579.51968503937], [1.550476406E12, 60564.0], [1.550476578E12, 60579.0], [1.550476152E12, 60664.0], [1.550475939E12, 1069.782258064516], [1.550476324E12, 60577.0], [1.550476283E12, 60730.444444444445], [1.550476455E12, 60575.333333333336], [1.550476029E12, 60901.44444444444], [1.550476201E12, 60556.5], [1.55047616E12, 60571.75], [1.550476267E12, 60629.4375], [1.550476398E12, 60568.71428571428], [1.55047657E12, 60570.692307692305], [1.550476144E12, 60571.72727272727], [1.550475931E12, 761.0549450549447], [1.550476275E12, 60731.375], [1.550476447E12, 60570.0], [1.550476021E12, 60580.666666666664], [1.550476513E12, 60577.68749999999], [1.550476087E12, 60634.869158878486], [1.550476259E12, 60557.0], [1.550476218E12, 60666.22222222222], [1.55047639E12, 60602.36496350367], [1.550475964E12, 2438.114754098362], [1.550475923E12, 607.3333333333331], [1.550476521E12, 60574.40000000001], [1.550476095E12, 60574.77777777778], [1.550475948E12, 1485.613861386139], [1.550476161E12, 60577.12500000001], [1.550476333E12, 60561.857142857145], [1.550476505E12, 60568.5], [1.550476079E12, 60575.0], [1.550476464E12, 60579.28571428572], [1.550476038E12, 60575.666666666664], [1.55047621E12, 60596.23529411765], [1.550476382E12, 60580.5], [1.550475956E12, 1907.4476190476187], [1.550476341E12, 60575.166666666664], [1.55047628E12, 60588.66666666667], [1.550476452E12, 60964.190140845036], [1.550476026E12, 60655.776], [1.550476198E12, 60607.0], [1.550475944E12, 1490.7272727272725], [1.550476157E12, 60575.55555555556], [1.550476329E12, 60601.26086956521], [1.550476395E12, 60637.6], [1.550476567E12, 60582.25], [1.550475928E12, 691.5285714285716], [1.550476526E12, 60571.8], [1.5504761E12, 60565.88888888888], [1.550476272E12, 60618.11111111111], [1.550476444E12, 60577.5], [1.550476018E12, 60734.25], [1.550476403E12, 60578.3], [1.550476575E12, 60617.99999999999], [1.550475936E12, 1166.311827956989], [1.550476149E12, 60587.0], [1.550476215E12, 60626.125], [1.550476387E12, 60566.18181818182], [1.550475961E12, 2163.0087719298244], [1.550476133E12, 60580.0], [1.550476518E12, 60578.875], [1.550476092E12, 60573.333333333336], [1.550476264E12, 60574.75], [1.550476223E12, 60714.666666666664], [1.550476502E12, 60585.5], [1.550476461E12, 60570.777777777774], [1.550476035E12, 60620.5], [1.550476207E12, 60586.934579439236], [1.550475953E12, 1763.8809523809525], [1.550476338E12, 60573.0], [1.55047651E12, 60570.142857142855], [1.550476084E12, 60824.25], [1.55047615E12, 60585.69999999999], [1.550475937E12, 1085.4461538461535], [1.550476322E12, 60576.0], [1.550476281E12, 60660.454545454544], [1.550476453E12, 61125.375], [1.550476027E12, 60588.524590163935], [1.550476199E12, 60573.0], [1.550476158E12, 60577.0], [1.550475945E12, 1560.1280000000006], [1.55047633E12, 60577.75396825399], [1.550476396E12, 60579.77777777778], [1.550476568E12, 60588.299999999996], [1.550476142E12, 60571.0], [1.550475929E12, 681.5697674418606], [1.550476527E12, 60567.75], [1.550476101E12, 60570.71428571428], [1.550476273E12, 60574.700000000004], [1.550476019E12, 60599.0], [1.550476404E12, 60635.42857142857], [1.550476576E12, 60575.555555555555], [1.550476216E12, 60651.0], [1.550476388E12, 60585.38461538462], [1.550475962E12, 2560.243902439025], [1.550475921E12, 640.5], [1.550476519E12, 60584.399999999994], [1.550476093E12, 60577.625], [1.550476265E12, 60581.666666666664], [1.550476437E12, 60586.333333333336], [1.550476331E12, 60562.09615384615], [1.550476077E12, 60729.5], [1.550476462E12, 60577.28571428571], [1.550476036E12, 60576.50000000001], [1.550476208E12, 60636.57024793387], [1.550475954E12, 1729.5590551181106], [1.550476339E12, 60572.00000000001], [1.550476511E12, 60568.153846153844], [1.550476085E12, 60589.49122807016]], "isOverall": false, "label": "Get availability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.550476581E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 607.2962962962962, "minX": 1.550475921E12, "maxY": 61220.77777777778, "series": [{"data": [[1.550476278E12, 60802.63636363637], [1.55047645E12, 60614.28813559322], [1.550476024E12, 60633.84210526317], [1.550476581E12, 60708.666666666664], [1.550475942E12, 1199.3223140495866], [1.550476155E12, 60581.0], [1.550476327E12, 60583.899999999994], [1.550476073E12, 60571.5], [1.550476458E12, 60580.857142857145], [1.550476032E12, 60571.77777777778], [1.550475926E12, 624.3018867924529], [1.550476524E12, 60564.77777777778], [1.550476098E12, 60624.25], [1.55047627E12, 60575.22950819672], [1.550476016E12, 60638.0], [1.550476401E12, 60572.57142857143], [1.550476573E12, 60590.14102564105], [1.550475934E12, 1019.9861111111111], [1.550476147E12, 60670.816666666666], [1.550476385E12, 60589.5], [1.550475959E12, 2202.3565891472863], [1.550476344E12, 60573.857142857145], [1.550476516E12, 60605.0], [1.55047609E12, 60580.125], [1.550476262E12, 60569.5], [1.550476221E12, 60591.375], [1.550476393E12, 60569.71428571429], [1.550475967E12, 5507.0], [1.550476565E12, 60576.4], [1.550476459E12, 60573.37499999999], [1.550476033E12, 60569.0], [1.550476205E12, 60568.25000000001], [1.550475951E12, 1665.2949640287766], [1.550476336E12, 60567.77777777778], [1.550476508E12, 60593.0], [1.550476082E12, 60573.0], [1.550476041E12, 60590.2], [1.550476213E12, 60579.77777777778], [1.550476279E12, 60653.44444444445], [1.550476451E12, 60806.75824175822], [1.550476025E12, 60627.04411764707], [1.550476156E12, 60575.0], [1.550475943E12, 1428.905660377359], [1.550476328E12, 60667.26086956521], [1.550476566E12, 60581.0], [1.55047614E12, 60570.33333333333], [1.550475927E12, 649.8196721311476], [1.550476525E12, 60576.0], [1.550476099E12, 60566.88888888889], [1.550476271E12, 60628.92857142857], [1.550476443E12, 60572.25], [1.550476402E12, 60580.666666666664], [1.550476574E12, 60570.51666666666], [1.550476148E12, 60602.12], [1.550475935E12, 1202.4269662921345], [1.55047632E12, 60577.5], [1.550476214E12, 60591.625], [1.550476386E12, 60563.818181818184], [1.55047596E12, 2029.3407407407406], [1.550476558E12, 60585.666666666664], [1.550476345E12, 60569.5], [1.550476517E12, 60563.99999999999], [1.550476091E12, 60572.5], [1.550476263E12, 60565.0], [1.550476222E12, 60579.77777777778], [1.550476394E12, 60599.54545454545], [1.55047646E12, 60573.666666666664], [1.550476034E12, 60569.88888888889], [1.550476206E12, 60601.230769230766], [1.550475952E12, 1631.1089108910894], [1.550476337E12, 60572.57142857143], [1.550476509E12, 60584.13333333333], [1.550476083E12, 60572.42857142857], [1.550476255E12, 60572.333333333336], [1.550476022E12, 60577.5], [1.550476194E12, 60577.333333333336], [1.550476579E12, 60593.125], [1.55047594E12, 1064.6491228070179], [1.550476153E12, 60580.25000000001], [1.550476325E12, 60572.63636363636], [1.550476284E12, 60585.75], [1.550476456E12, 60577.444444444445], [1.55047603E12, 60919.100000000006], [1.550476268E12, 60865.16091954023], [1.550476399E12, 60562.50000000001], [1.550476571E12, 60572.911764705874], [1.550475932E12, 818.0813953488372], [1.550476145E12, 60568.07142857142], [1.550476276E12, 60667.5], [1.550476448E12, 60586.50000000001], [1.550476342E12, 60572.666666666664], [1.550476514E12, 60568.828571428574], [1.550476088E12, 60834.33333333334], [1.550476219E12, 60633.71428571428], [1.550476391E12, 60606.54285714286], [1.550475965E12, 2544.252252252252], [1.550476563E12, 60571.5], [1.550475924E12, 668.1470588235294], [1.550476522E12, 60564.9], [1.550476096E12, 60567.125], [1.550476203E12, 60574.0], [1.550476162E12, 60626.625], [1.550475949E12, 1562.0496894409941], [1.550476334E12, 60560.0], [1.550476506E12, 60568.0], [1.55047608E12, 60570.0], [1.550476465E12, 60571.375], [1.550476039E12, 60575.12499999999], [1.550476211E12, 60843.72727272727], [1.550476383E12, 60574.25], [1.550475957E12, 2048.3851351351354], [1.550476449E12, 60606.307692307695], [1.550476023E12, 60580.42857142857], [1.55047658E12, 60572.875], [1.550476154E12, 60580.777777777774], [1.550475941E12, 1221.75], [1.550476326E12, 60576.0], [1.550476498E12, 60570.333333333336], [1.550476072E12, 60609.0], [1.550476457E12, 60575.5], [1.550476031E12, 60572.875], [1.550476523E12, 60585.0], [1.550476097E12, 60573.875], [1.550476269E12, 60678.33908045978], [1.550476441E12, 60579.5], [1.5504764E12, 60605.40000000001], [1.550476572E12, 60583.35211267605], [1.550476146E12, 60582.07594936709], [1.550475933E12, 983.009803921568], [1.550476277E12, 60677.333333333336], [1.550475958E12, 2187.816666666666], [1.550476343E12, 60572.28571428571], [1.550476515E12, 60559.818181818184], [1.550476089E12, 60617.77777777778], [1.550476261E12, 60573.5], [1.55047622E12, 60720.4], [1.550476392E12, 60676.72222222221], [1.550475966E12, 2543.7625000000007], [1.550476138E12, 60583.0], [1.550475925E12, 643.3958333333331], [1.550476204E12, 60584.0], [1.550476376E12, 60581.0], [1.55047595E12, 1531.9343065693433], [1.550476163E12, 60572.0], [1.550476335E12, 60594.125], [1.550476507E12, 60569.76923076923], [1.550476081E12, 60574.0], [1.550476466E12, 60572.71428571429], [1.55047604E12, 60571.5], [1.550476212E12, 60574.22222222222], [1.550476577E12, 60576.8], [1.550475938E12, 936.4237288135596], [1.550476151E12, 60580.99999999999], [1.550476323E12, 60575.0], [1.550476282E12, 60590.5], [1.550476454E12, 61220.77777777778], [1.550476028E12, 60574.454545454544], [1.5504762E12, 60595.5], [1.550475946E12, 1486.90243902439], [1.550476159E12, 60584.25], [1.550476012E12, 60617.333333333336], [1.550476397E12, 60571.666666666664], [1.550476569E12, 60575.22222222222], [1.55047593E12, 671.0224719101122], [1.550476143E12, 60570.4], [1.550476102E12, 60572.666666666664], [1.550476315E12, 60573.333333333336], [1.550476274E12, 60691.0], [1.550476446E12, 60573.857142857145], [1.550476405E12, 60569.5], [1.550476086E12, 60589.09836065574], [1.550476217E12, 60707.25], [1.550476389E12, 60568.789473684206], [1.550475963E12, 2559.5538461538486], [1.550475922E12, 629.3846153846154], [1.55047652E12, 60571.8], [1.550476094E12, 60571.375], [1.550476266E12, 60575.85714285714], [1.550475947E12, 1449.0729927007305], [1.550476332E12, 60842.28571428571], [1.550476504E12, 60575.25], [1.550476463E12, 60614.0], [1.550476037E12, 60588.25], [1.550476209E12, 60615.85106382981], [1.550476381E12, 60574.5], [1.550475955E12, 1773.4469696969693], [1.55047634E12, 60576.125], [1.550476512E12, 60579.51968503937], [1.550476406E12, 60564.0], [1.550476578E12, 60579.0], [1.550476152E12, 60664.0], [1.550475939E12, 1069.7741935483868], [1.550476324E12, 60577.0], [1.550476283E12, 60730.444444444445], [1.550476455E12, 60575.333333333336], [1.550476029E12, 60901.44444444444], [1.550476201E12, 60556.5], [1.55047616E12, 60571.75], [1.550476267E12, 60629.25000000001], [1.550476398E12, 60568.71428571428], [1.55047657E12, 60570.61538461538], [1.550476144E12, 60571.63636363636], [1.550475931E12, 761.0549450549447], [1.550476275E12, 60731.375], [1.550476447E12, 60570.0], [1.550476021E12, 60580.666666666664], [1.550476513E12, 60577.666666666664], [1.550476087E12, 60634.869158878486], [1.550476259E12, 60557.0], [1.550476218E12, 60666.22222222222], [1.55047639E12, 60602.35766423358], [1.550475964E12, 2438.106557377051], [1.550475923E12, 607.2962962962962], [1.550476521E12, 60574.40000000001], [1.550476095E12, 60574.666666666664], [1.550475948E12, 1485.613861386139], [1.550476161E12, 60577.0], [1.550476333E12, 60561.857142857145], [1.550476505E12, 60568.5], [1.550476079E12, 60575.0], [1.550476464E12, 60579.28571428572], [1.550476038E12, 60575.666666666664], [1.55047621E12, 60596.23529411765], [1.550476382E12, 60580.5], [1.550475956E12, 1907.4476190476187], [1.550476341E12, 60575.166666666664], [1.55047628E12, 60588.66666666667], [1.550476452E12, 60964.176056337994], [1.550476026E12, 60655.76800000001], [1.550476198E12, 60607.0], [1.550475944E12, 1490.7090909090905], [1.550476157E12, 60575.55555555556], [1.550476329E12, 60601.26086956521], [1.550476395E12, 60637.6], [1.550476567E12, 60582.25], [1.550475928E12, 691.5142857142858], [1.550476526E12, 60571.8], [1.5504761E12, 60565.88888888888], [1.550476272E12, 60618.11111111111], [1.550476444E12, 60577.5], [1.550476018E12, 60734.25], [1.550476403E12, 60578.3], [1.550476575E12, 60617.99999999999], [1.550475936E12, 1166.311827956989], [1.550476149E12, 60587.0], [1.550476215E12, 60626.125], [1.550476387E12, 60566.18181818182], [1.550475961E12, 2163.0087719298244], [1.550476133E12, 60580.0], [1.550476518E12, 60578.875], [1.550476092E12, 60573.333333333336], [1.550476264E12, 60574.75], [1.550476223E12, 60714.666666666664], [1.550476502E12, 60585.5], [1.550476461E12, 60570.777777777774], [1.550476035E12, 60620.5], [1.550476207E12, 60586.934579439236], [1.550475953E12, 1763.875000000001], [1.550476338E12, 60573.0], [1.55047651E12, 60570.142857142855], [1.550476084E12, 60824.16666666666], [1.55047615E12, 60585.59999999999], [1.550475937E12, 1085.4384615384613], [1.550476322E12, 60576.0], [1.550476281E12, 60660.454545454544], [1.550476453E12, 61125.375], [1.550476027E12, 60588.49180327869], [1.550476199E12, 60573.0], [1.550476158E12, 60576.88888888889], [1.550475945E12, 1560.112], [1.55047633E12, 60577.75396825399], [1.550476396E12, 60579.77777777778], [1.550476568E12, 60588.299999999996], [1.550476142E12, 60571.0], [1.550475929E12, 681.5581395348835], [1.550476527E12, 60567.75], [1.550476101E12, 60570.71428571428], [1.550476273E12, 60574.700000000004], [1.550476019E12, 60599.0], [1.550476404E12, 60635.42857142857], [1.550476576E12, 60575.555555555555], [1.550476216E12, 60651.0], [1.550476388E12, 60585.38461538462], [1.550475962E12, 2560.2357723577243], [1.550475921E12, 640.25], [1.550476519E12, 60584.399999999994], [1.550476093E12, 60577.625], [1.550476265E12, 60581.666666666664], [1.550476437E12, 60586.333333333336], [1.550476331E12, 60562.07692307693], [1.550476077E12, 60729.5], [1.550476462E12, 60577.28571428571], [1.550476036E12, 60576.50000000001], [1.550476208E12, 60636.57024793387], [1.550475954E12, 1729.5590551181106], [1.550476339E12, 60572.00000000001], [1.550476511E12, 60568.153846153844], [1.550476085E12, 60589.49122807016]], "isOverall": false, "label": "Get availability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.550476581E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 415.5, "minX": 1.550475921E12, "maxY": 1064.1666666666667, "series": [{"data": [[1.550476278E12, 662.5454545454544], [1.55047645E12, 462.0847457627118], [1.550476024E12, 460.1578947368421], [1.550476581E12, 572.0], [1.550475942E12, 478.6363636363636], [1.550476155E12, 436.3333333333333], [1.550476327E12, 445.29999999999995], [1.550476073E12, 433.0], [1.550476458E12, 434.2857142857143], [1.550476032E12, 432.22222222222223], [1.550475926E12, 425.32075471698107], [1.550476524E12, 426.1111111111111], [1.550476098E12, 484.375], [1.55047627E12, 433.9016393442621], [1.550476016E12, 486.5], [1.550476401E12, 434.57142857142856], [1.550476573E12, 445.1923076923077], [1.550475934E12, 448.68055555555543], [1.550476147E12, 509.4499999999997], [1.550476385E12, 449.25], [1.550475959E12, 513.3255813953485], [1.550476344E12, 434.8571428571429], [1.550476516E12, 449.1111111111111], [1.55047609E12, 437.625], [1.550476262E12, 431.5], [1.550476221E12, 434.62500000000006], [1.550476393E12, 430.07142857142856], [1.550475967E12, 521.2], [1.550476565E12, 435.2], [1.550476459E12, 435.25], [1.550476033E12, 430.375], [1.550476205E12, 429.25], [1.550475951E12, 489.4028776978417], [1.550476336E12, 428.44444444444446], [1.550476508E12, 453.0], [1.550476082E12, 434.09090909090907], [1.550476041E12, 451.4], [1.550476213E12, 435.33333333333337], [1.550476279E12, 513.3333333333334], [1.550476451E12, 582.076923076923], [1.550476025E12, 468.36029411764696], [1.550476156E12, 434.42857142857144], [1.550475943E12, 515.1037735849059], [1.550476328E12, 504.7826086956522], [1.550476566E12, 442.0], [1.55047614E12, 432.66666666666663], [1.550475927E12, 447.9180327868853], [1.550476525E12, 437.14285714285717], [1.550476099E12, 427.77777777777777], [1.550476271E12, 489.0], [1.550476443E12, 434.75], [1.550476402E12, 441.3333333333333], [1.550476574E12, 427.5666666666667], [1.550476148E12, 444.5199999999999], [1.550475935E12, 476.11235955056173], [1.55047632E12, 438.5], [1.550476214E12, 446.0], [1.550476386E12, 424.99999999999994], [1.55047596E12, 489.2], [1.550476558E12, 437.0], [1.550476345E12, 430.5], [1.550476517E12, 422.75], [1.550476091E12, 432.2], [1.550476263E12, 426.0], [1.550476222E12, 434.3333333333333], [1.550476394E12, 460.6363636363636], [1.55047646E12, 435.77777777777777], [1.550476034E12, 430.6666666666667], [1.550476206E12, 460.1538461538462], [1.550475952E12, 459.2376237623763], [1.550476337E12, 433.2857142857143], [1.550476509E12, 445.7333333333334], [1.550476083E12, 433.42857142857144], [1.550476255E12, 433.3333333333333], [1.550476022E12, 435.5], [1.550476194E12, 434.6666666666667], [1.550476579E12, 454.25], [1.55047594E12, 467.0087719298246], [1.550476153E12, 440.375], [1.550476325E12, 427.6363636363636], [1.550476284E12, 445.75], [1.550476456E12, 432.0], [1.55047603E12, 779.3], [1.550476268E12, 686.6551724137933], [1.550476399E12, 423.625], [1.550476571E12, 431.2058823529412], [1.550475932E12, 519.3139534883722], [1.550476145E12, 427.92857142857144], [1.550476276E12, 527.1249999999999], [1.550476448E12, 438.58333333333337], [1.550476342E12, 430.49999999999994], [1.550476514E12, 429.02857142857147], [1.550476088E12, 681.8070175438598], [1.550476219E12, 478.1428571428571], [1.550476391E12, 441.0952380952381], [1.550475965E12, 438.5045045045046], [1.550476563E12, 431.0], [1.550475924E12, 432.7647058823531], [1.550476522E12, 425.4], [1.550476096E12, 427.875], [1.550476203E12, 436.0], [1.550476162E12, 487.25], [1.550475949E12, 448.9565217391304], [1.550476334E12, 421.5], [1.550476506E12, 429.0], [1.55047608E12, 430.0], [1.550476465E12, 432.75000000000006], [1.550476039E12, 436.125], [1.550476211E12, 705.4545454545454], [1.550476383E12, 435.5], [1.550475957E12, 456.9527027027028], [1.550476449E12, 467.00000000000006], [1.550476023E12, 434.9285714285715], [1.55047658E12, 434.5], [1.550476154E12, 435.3333333333333], [1.550475941E12, 452.3333333333332], [1.550476326E12, 437.55555555555554], [1.550476498E12, 421.6666666666667], [1.550476072E12, 440.0], [1.550476457E12, 436.25], [1.550476031E12, 433.00000000000006], [1.550476523E12, 444.0], [1.550476097E12, 434.12499999999994], [1.550476269E12, 530.0574712643678], [1.550476441E12, 436.5], [1.5504764E12, 436.5], [1.550476572E12, 436.6338028169015], [1.550476146E12, 436.7088607594938], [1.550475933E12, 487.71568627450984], [1.550476277E12, 537.6666666666666], [1.550475958E12, 466.7916666666667], [1.550476343E12, 430.2857142857143], [1.550476515E12, 421.1818181818182], [1.550476089E12, 477.77777777777777], [1.550476261E12, 433.75], [1.55047622E12, 563.1999999999998], [1.550476392E12, 511.61111111111103], [1.550475966E12, 444.84999999999997], [1.550476138E12, 429.0], [1.550475925E12, 436.3333333333333], [1.550476204E12, 444.72727272727275], [1.550476376E12, 430.6666666666667], [1.55047595E12, 461.8248175182482], [1.550476163E12, 433.0], [1.550476335E12, 426.24999999999994], [1.550476507E12, 430.07692307692304], [1.550476081E12, 435.6666666666667], [1.550476466E12, 434.57142857142856], [1.55047604E12, 433.75], [1.550476212E12, 435.55555555555554], [1.550476577E12, 438.2], [1.550475938E12, 468.6355932203389], [1.550476151E12, 441.625], [1.550476323E12, 437.5], [1.550476282E12, 449.125], [1.550476454E12, 1064.1666666666667], [1.550476028E12, 429.3636363636363], [1.5504762E12, 455.5], [1.550475946E12, 486.821138211382], [1.550476159E12, 430.125], [1.550476012E12, 428.3333333333333], [1.550476397E12, 432.88888888888886], [1.550476569E12, 434.77777777777777], [1.55047593E12, 427.16853932584263], [1.550476143E12, 432.20000000000005], [1.550476102E12, 434.0], [1.550476315E12, 435.0], [1.550476274E12, 551.5], [1.550476446E12, 434.7142857142857], [1.550476405E12, 430.25000000000006], [1.550476086E12, 433.60655737704934], [1.550476217E12, 431.0], [1.550476389E12, 426.61403508771923], [1.550475963E12, 453.223076923077], [1.550475922E12, 428.84615384615387], [1.55047652E12, 435.2], [1.550476094E12, 432.875], [1.550476266E12, 434.71428571428567], [1.550475947E12, 471.18248175182487], [1.550476332E12, 667.2857142857142], [1.550476504E12, 436.25], [1.550476463E12, 468.00000000000006], [1.550476037E12, 448.5], [1.550476209E12, 472.13829787234044], [1.550476381E12, 434.0], [1.550475955E12, 437.0530303030302], [1.55047634E12, 437.0], [1.550476512E12, 434.76377952755894], [1.550476406E12, 426.0], [1.550476578E12, 438.77777777777777], [1.550476152E12, 524.4444444444445], [1.550475939E12, 436.73387096774206], [1.550476324E12, 435.0], [1.550476283E12, 589.6666666666666], [1.550476455E12, 435.44444444444446], [1.550476029E12, 762.2222222222222], [1.550476201E12, 419.0], [1.55047616E12, 432.625], [1.550476267E12, 465.18750000000006], [1.550476398E12, 429.7142857142857], [1.55047657E12, 431.53846153846155], [1.550476144E12, 430.18181818181813], [1.550475931E12, 441.5384615384616], [1.550476275E12, 591.125], [1.550476447E12, 432.25], [1.550476021E12, 427.58333333333337], [1.550476513E12, 435.4375000000001], [1.550476087E12, 469.1869158878506], [1.550476259E12, 415.5], [1.550476218E12, 443.3333333333333], [1.55047639E12, 429.4014598540147], [1.550475964E12, 445.14754098360646], [1.550475923E12, 430.6666666666667], [1.550476521E12, 435.1], [1.550476095E12, 436.2222222222223], [1.550475948E12, 478.7722772277226], [1.550476161E12, 435.875], [1.550476333E12, 423.5714285714286], [1.550476505E12, 429.5], [1.550476079E12, 436.0], [1.550476464E12, 439.7142857142857], [1.550476038E12, 436.3333333333333], [1.55047621E12, 457.05882352941177], [1.550476382E12, 440.5], [1.550475956E12, 443.1333333333334], [1.550476341E12, 437.1666666666667], [1.55047628E12, 449.1666666666667], [1.550476452E12, 776.1971830985915], [1.550476026E12, 504.0960000000002], [1.550476198E12, 466.0], [1.550475944E12, 442.4818181818181], [1.550476157E12, 433.22222222222223], [1.550476329E12, 457.52173913043475], [1.550476395E12, 496.2], [1.550476567E12, 441.75], [1.550475928E12, 477.8285714285716], [1.550476526E12, 432.7], [1.5504761E12, 426.55555555555554], [1.550476272E12, 436.44444444444446], [1.550476444E12, 439.5], [1.550476018E12, 577.75], [1.550476403E12, 435.79999999999995], [1.550476575E12, 464.0740740740741], [1.550475936E12, 429.2043010752688], [1.550476149E12, 430.00000000000006], [1.550476215E12, 447.99999999999994], [1.550476387E12, 426.9090909090909], [1.550475961E12, 464.30701754385956], [1.550476133E12, 434.3333333333333], [1.550476518E12, 437.625], [1.550476092E12, 432.3333333333333], [1.550476264E12, 435.75], [1.550476223E12, 436.33333333333337], [1.550476502E12, 445.0], [1.550476461E12, 432.1111111111111], [1.550476035E12, 481.75000000000006], [1.550476207E12, 429.90654205607456], [1.550475953E12, 461.6130952380952], [1.550476338E12, 434.3333333333333], [1.55047651E12, 429.49999999999994], [1.550476084E12, 684.4166666666666], [1.55047615E12, 440.59999999999997], [1.550475937E12, 446.2076923076921], [1.550476322E12, 437.5], [1.550476281E12, 519.2727272727274], [1.550476453E12, 981.5500000000002], [1.550476027E12, 432.7049180327869], [1.550476199E12, 436.0], [1.550476158E12, 437.8888888888889], [1.550475945E12, 442.95999999999987], [1.55047633E12, 433.83333333333326], [1.550476396E12, 440.44444444444446], [1.550476568E12, 450.8], [1.550476142E12, 433.5], [1.550475929E12, 431.76744186046494], [1.550476527E12, 429.5], [1.550476101E12, 431.2857142857143], [1.550476273E12, 434.7], [1.550476019E12, 458.0], [1.550476404E12, 496.0], [1.550476576E12, 438.0], [1.550476216E12, 437.75000000000006], [1.550476388E12, 422.61538461538464], [1.550475962E12, 495.11382113821145], [1.550475921E12, 432.25], [1.550476519E12, 444.4], [1.550476093E12, 437.375], [1.550476265E12, 438.0], [1.550476437E12, 436.3333333333333], [1.550476331E12, 422.7307692307692], [1.550476077E12, 437.0], [1.550476462E12, 436.2857142857143], [1.550476036E12, 437.00000000000006], [1.550476208E12, 451.90082644628103], [1.550475954E12, 480.4094488188976], [1.550476339E12, 433.33333333333337], [1.550476511E12, 427.52564102564094], [1.550476085E12, 445.7894736842105]], "isOverall": false, "label": "Get availability", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.550476581E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 589.0, "minX": 1.550475921E12, "maxY": 9584.0, "series": [{"data": [[1.550475937E12, 1540.0], [1.550475938E12, 1372.0], [1.550475939E12, 1154.0], [1.55047594E12, 1381.0], [1.550475941E12, 1823.0], [1.550475942E12, 4027.0], [1.550475943E12, 1517.0], [1.550475944E12, 1858.0], [1.550475945E12, 2094.0], [1.550475946E12, 4540.0], [1.550475926E12, 682.0], [1.550475927E12, 1055.0], [1.550475928E12, 3606.0], [1.550475929E12, 792.0], [1.55047593E12, 722.0], [1.550475931E12, 1095.0], [1.550475932E12, 954.0], [1.550475933E12, 3988.0], [1.550475934E12, 1381.0], [1.550475935E12, 4159.0], [1.550475936E12, 1214.0], [1.550475958E12, 4981.0], [1.550475959E12, 7791.0], [1.55047596E12, 4748.0], [1.550475961E12, 4834.0], [1.550475962E12, 8740.0], [1.550475963E12, 8686.0], [1.550475921E12, 700.0], [1.550475964E12, 8663.0], [1.550475922E12, 915.0], [1.550475965E12, 8823.0], [1.550475923E12, 639.0], [1.550475966E12, 5228.0], [1.550475924E12, 855.0], [1.550475967E12, 9584.0], [1.550475925E12, 835.0], [1.550475947E12, 1794.0], [1.550475948E12, 4441.0], [1.550475949E12, 2205.0], [1.55047595E12, 1667.0], [1.550475951E12, 4609.0], [1.550475952E12, 2567.0], [1.550475953E12, 2931.0], [1.550475954E12, 4543.0], [1.550475955E12, 4745.0], [1.550475956E12, 4693.0], [1.550475957E12, 4827.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.550475937E12, 878.0], [1.550475938E12, 785.0], [1.550475939E12, 1026.0], [1.55047594E12, 988.0], [1.550475941E12, 1046.0], [1.550475942E12, 1036.0], [1.550475943E12, 1252.0], [1.550475944E12, 1423.0], [1.550475945E12, 1428.0], [1.550475946E12, 1304.0], [1.550475926E12, 593.0], [1.550475927E12, 589.0], [1.550475928E12, 608.0], [1.550475929E12, 601.0], [1.55047593E12, 611.0], [1.550475931E12, 650.0], [1.550475932E12, 716.0], [1.550475933E12, 800.0], [1.550475934E12, 797.0], [1.550475935E12, 1115.0], [1.550475936E12, 1074.0], [1.550475958E12, 1598.0], [1.550475959E12, 1670.0], [1.55047596E12, 1763.0], [1.550475961E12, 1807.0], [1.550475962E12, 1925.0], [1.550475963E12, 2039.0], [1.550475921E12, 606.0], [1.550475964E12, 1961.0], [1.550475922E12, 594.0], [1.550475965E12, 2116.0], [1.550475923E12, 589.0], [1.550475966E12, 2285.0], [1.550475924E12, 596.0], [1.550475967E12, 2868.0], [1.550475925E12, 601.0], [1.550475947E12, 1359.0], [1.550475948E12, 1381.0], [1.550475949E12, 1346.0], [1.55047595E12, 1337.0], [1.550475951E12, 1556.0], [1.550475952E12, 1522.0], [1.550475953E12, 1509.0], [1.550475954E12, 1455.0], [1.550475955E12, 1605.0], [1.550475956E12, 1667.0], [1.550475957E12, 1575.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.550475937E12, 1168.0], [1.550475938E12, 1166.0], [1.550475939E12, 1162.6000000000001], [1.55047594E12, 1161.0], [1.550475941E12, 1183.0], [1.550475942E12, 1196.0], [1.550475943E12, 1247.6], [1.550475944E12, 1430.3], [1.550475945E12, 1475.8], [1.550475946E12, 1500.0], [1.550475926E12, 664.2], [1.550475927E12, 674.8], [1.550475928E12, 686.3], [1.550475929E12, 724.0], [1.55047593E12, 715.2], [1.550475931E12, 768.0], [1.550475932E12, 797.0], [1.550475933E12, 924.0], [1.550475934E12, 987.5], [1.550475935E12, 1137.0], [1.550475936E12, 1162.0], [1.550475958E12, 1727.0], [1.550475959E12, 1764.8000000000002], [1.55047596E12, 1817.0], [1.550475961E12, 1854.0], [1.550475962E12, 1918.0], [1.550475963E12, 2031.0], [1.550475921E12, 700.0], [1.550475964E12, 2075.0], [1.550475922E12, 742.9999999999999], [1.550475965E12, 2122.0], [1.550475923E12, 634.6], [1.550475966E12, 2193.0], [1.550475924E12, 777.0], [1.550475967E12, 2200.5], [1.550475925E12, 739.5000000000002], [1.550475947E12, 1499.8000000000002], [1.550475948E12, 1497.7000000000003], [1.550475949E12, 1526.8000000000002], [1.55047595E12, 1543.1], [1.550475951E12, 1576.0], [1.550475952E12, 1587.0], [1.550475953E12, 1617.0], [1.550475954E12, 1626.0], [1.550475955E12, 1654.9], [1.550475956E12, 1676.4], [1.550475957E12, 1700.7000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.550475937E12, 1447.75], [1.550475938E12, 1439.7099999999998], [1.550475939E12, 1434.7999999999995], [1.55047594E12, 1431.44], [1.550475941E12, 1460.6000000000004], [1.550475942E12, 1459.7600000000002], [1.550475943E12, 1503.6299999999999], [1.550475944E12, 1542.0], [1.550475945E12, 1670.6400000000026], [1.550475946E12, 1698.0], [1.550475926E12, 871.8000000000001], [1.550475927E12, 1012.9800000000012], [1.550475928E12, 1053.06], [1.550475929E12, 942.5999999999984], [1.55047593E12, 874.1999999999996], [1.550475931E12, 879.5999999999981], [1.550475932E12, 952.6499999999999], [1.550475933E12, 1064.71], [1.550475934E12, 1157.85], [1.550475935E12, 1199.96], [1.550475936E12, 1212.1], [1.550475958E12, 2788.0], [1.550475959E12, 2920.24], [1.55047596E12, 2922.19], [1.550475961E12, 4104.880000000019], [1.550475962E12, 4669.76], [1.550475963E12, 4745.1], [1.550475921E12, 700.0], [1.550475964E12, 4773.670000000001], [1.550475922E12, 915.0], [1.550475965E12, 4806.799999999997], [1.550475923E12, 915.0], [1.550475966E12, 4811.939999999999], [1.550475924E12, 915.0], [1.550475967E12, 4824.349999999998], [1.550475925E12, 903.6000000000001], [1.550475947E12, 1716.239999999997], [1.550475948E12, 1739.0100000000002], [1.550475949E12, 1742.3199999999997], [1.55047595E12, 1741.71], [1.550475951E12, 1765.4000000000015], [1.550475952E12, 1800.2999999999984], [1.550475953E12, 1973.3999999999992], [1.550475954E12, 2540.9699999999975], [1.550475955E12, 2578.0], [1.550475956E12, 2680.08], [1.550475957E12, 2708.2800000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.550475937E12, 1197.0], [1.550475938E12, 1195.85], [1.550475939E12, 1192.0], [1.55047594E12, 1191.0], [1.550475941E12, 1214.5], [1.550475942E12, 1240.8999999999996], [1.550475943E12, 1428.1499999999999], [1.550475944E12, 1468.6499999999999], [1.550475945E12, 1531.3999999999999], [1.550475946E12, 1539.25], [1.550475926E12, 776.2], [1.550475927E12, 771.65], [1.550475928E12, 745.8499999999996], [1.550475929E12, 768.0], [1.55047593E12, 760.8], [1.550475931E12, 792.0999999999999], [1.550475932E12, 865.5], [1.550475933E12, 990.85], [1.550475934E12, 1053.0], [1.550475935E12, 1162.0], [1.550475936E12, 1180.25], [1.550475958E12, 1893.3999999999996], [1.550475959E12, 1945.3999999999996], [1.55047596E12, 2016.4999999999964], [1.550475961E12, 2093.699999999999], [1.550475962E12, 2560.5999999999985], [1.550475963E12, 2625.0], [1.550475921E12, 700.0], [1.550475964E12, 2667.8999999999996], [1.550475922E12, 915.0], [1.550475965E12, 2683.8999999999996], [1.550475923E12, 687.7999999999998], [1.550475966E12, 2694.7999999999993], [1.550475924E12, 818.75], [1.550475967E12, 2697.75], [1.550475925E12, 799.8499999999999], [1.550475947E12, 1540.0], [1.550475948E12, 1540.0], [1.550475949E12, 1565.0], [1.55047595E12, 1588.0], [1.550475951E12, 1613.6999999999998], [1.550475952E12, 1625.0], [1.550475953E12, 1694.0], [1.550475954E12, 1699.0499999999997], [1.550475955E12, 1716.4499999999998], [1.550475956E12, 1729.1999999999998], [1.550475957E12, 1794.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.550475967E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1459.0, "minX": 1000.0, "maxY": 60781.5, "series": [{"data": [[9000.0, 1529.0], [5000.0, 1485.0], [3000.0, 1547.0], [6000.0, 1729.5], [7000.0, 1531.0], [2000.0, 1537.0], [1000.0, 1459.0], [4000.0, 1684.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 60646.0], [5000.0, 60610.5], [11000.0, 60686.5], [3000.0, 60599.0], [6000.0, 60667.5], [7000.0, 60642.0], [1000.0, 60576.0], [2000.0, 60588.0], [4000.0, 60630.5], [8000.0, 60781.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 11000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1459.0, "minX": 1000.0, "maxY": 60781.5, "series": [{"data": [[9000.0, 1529.0], [5000.0, 1485.0], [3000.0, 1547.0], [6000.0, 1729.5], [7000.0, 1531.0], [2000.0, 1537.0], [1000.0, 1459.0], [4000.0, 1684.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9000.0, 60646.0], [5000.0, 60610.5], [11000.0, 60686.5], [3000.0, 60599.0], [6000.0, 60667.5], [7000.0, 60642.0], [1000.0, 60576.0], [2000.0, 60588.0], [4000.0, 60630.5], [8000.0, 60781.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 11000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.55047592E12, "maxY": 176.0, "series": [{"data": [[1.550476278E12, 9.0], [1.55047645E12, 52.0], [1.550476024E12, 15.0], [1.550475942E12, 124.0], [1.550476155E12, 9.0], [1.550476327E12, 14.0], [1.550476073E12, 3.0], [1.550476458E12, 7.0], [1.550476032E12, 8.0], [1.550475926E12, 63.0], [1.550476098E12, 7.0], [1.55047627E12, 75.0], [1.550476442E12, 1.0], [1.550476016E12, 2.0], [1.550476401E12, 8.0], [1.550475975E12, 9.0], [1.550475934E12, 84.0], [1.550476147E12, 110.0], [1.550476385E12, 4.0], [1.550475959E12, 139.0], [1.550476344E12, 9.0], [1.550476516E12, 10.0], [1.55047609E12, 8.0], [1.550476262E12, 2.0], [1.550476221E12, 10.0], [1.550476393E12, 13.0], [1.550475967E12, 14.0], [1.550476459E12, 7.0], [1.550476033E12, 8.0], [1.550476205E12, 12.0], [1.550475951E12, 144.0], [1.550476336E12, 9.0], [1.550476508E12, 3.0], [1.550476082E12, 13.0], [1.550476041E12, 5.0], [1.550476213E12, 7.0], [1.550476279E12, 10.0], [1.550476451E12, 97.0], [1.550476025E12, 130.0], [1.550476156E12, 8.0], [1.550475943E12, 115.0], [1.550476328E12, 13.0], [1.55047614E12, 4.0], [1.550475927E12, 71.0], [1.550476099E12, 10.0], [1.550476271E12, 13.0], [1.550476443E12, 3.0], [1.550476402E12, 7.0], [1.550475976E12, 8.0], [1.550476148E12, 104.0], [1.550475935E12, 101.0], [1.55047632E12, 2.0], [1.550476214E12, 10.0], [1.550476386E12, 10.0], [1.55047596E12, 140.0], [1.550476345E12, 4.0], [1.550476517E12, 7.0], [1.550476091E12, 11.0], [1.550476222E12, 9.0], [1.550476394E12, 9.0], [1.550475968E12, 8.0], [1.55047646E12, 8.0], [1.550476034E12, 9.0], [1.550476206E12, 12.0], [1.550475952E12, 123.0], [1.550476337E12, 9.0], [1.550476509E12, 13.0], [1.550476083E12, 4.0], [1.550476255E12, 3.0], [1.550476022E12, 10.0], [1.550476194E12, 3.0], [1.55047594E12, 135.0], [1.550476153E12, 9.0], [1.550476325E12, 11.0], [1.550476284E12, 7.0], [1.550476456E12, 7.0], [1.55047603E12, 9.0], [1.550476268E12, 76.0], [1.550476399E12, 7.0], [1.550475973E12, 9.0], [1.550475932E12, 91.0], [1.550476145E12, 14.0], [1.550476276E12, 8.0], [1.550476448E12, 12.0], [1.550476342E12, 10.0], [1.550476514E12, 38.0], [1.550476088E12, 61.0], [1.550476219E12, 7.0], [1.550476391E12, 122.0], [1.550475965E12, 120.0], [1.550475924E12, 36.0], [1.550476096E12, 8.0], [1.550476203E12, 4.0], [1.550476162E12, 8.0], [1.550475949E12, 160.0], [1.550476334E12, 9.0], [1.550476506E12, 1.0], [1.55047608E12, 2.0], [1.550476465E12, 6.0], [1.550476039E12, 8.0], [1.550476211E12, 12.0], [1.550476383E12, 6.0], [1.550475957E12, 133.0], [1.550476449E12, 12.0], [1.550476023E12, 12.0], [1.550476154E12, 7.0], [1.550475941E12, 133.0], [1.550476326E12, 5.0], [1.550476498E12, 3.0], [1.550476457E12, 10.0], [1.550476031E12, 9.0], [1.550476097E12, 8.0], [1.550476269E12, 176.0], [1.550476441E12, 1.0], [1.5504764E12, 9.0], [1.550475974E12, 8.0], [1.550476146E12, 72.0], [1.550475933E12, 107.0], [1.550476277E12, 7.0], [1.550475958E12, 131.0], [1.550476343E12, 8.0], [1.550476515E12, 15.0], [1.550476089E12, 11.0], [1.550476261E12, 4.0], [1.55047622E12, 8.0], [1.550476392E12, 51.0], [1.550475966E12, 107.0], [1.550476138E12, 2.0], [1.550475925E12, 58.0], [1.550476204E12, 11.0], [1.550476376E12, 3.0], [1.55047595E12, 142.0], [1.550476163E12, 2.0], [1.550476335E12, 8.0], [1.550476507E12, 12.0], [1.550476081E12, 1.0], [1.550476466E12, 9.0], [1.55047604E12, 9.0], [1.550476212E12, 10.0], [1.550475979E12, 9.0], [1.550475938E12, 125.0], [1.550476151E12, 7.0], [1.550476323E12, 2.0], [1.550476282E12, 9.0], [1.550476454E12, 23.0], [1.550476028E12, 11.0], [1.5504762E12, 2.0], [1.550475946E12, 139.0], [1.550476159E12, 8.0], [1.550476012E12, 3.0], [1.550476397E12, 8.0], [1.550475971E12, 8.0], [1.55047593E12, 96.0], [1.550476143E12, 11.0], [1.550476102E12, 4.0], [1.550476315E12, 1.0], [1.550476274E12, 8.0], [1.550476446E12, 4.0], [1.550476405E12, 7.0], [1.550476086E12, 129.0], [1.550476217E12, 8.0], [1.550476389E12, 38.0], [1.550475963E12, 137.0], [1.550475922E12, 22.0], [1.55047652E12, 6.0], [1.550476094E12, 7.0], [1.550476266E12, 12.0], [1.550475947E12, 140.0], [1.550476332E12, 13.0], [1.550476504E12, 4.0], [1.550476463E12, 8.0], [1.550476037E12, 7.0], [1.550476209E12, 88.0], [1.550476381E12, 2.0], [1.550475955E12, 139.0], [1.55047634E12, 9.0], [1.550476512E12, 107.0], [1.550476406E12, 4.0], [1.55047598E12, 8.0], [1.550476152E12, 11.0], [1.550475939E12, 130.0], [1.550476324E12, 3.0], [1.550476283E12, 6.0], [1.550476455E12, 12.0], [1.550476029E12, 9.0], [1.550476201E12, 4.0], [1.55047616E12, 9.0], [1.550476267E12, 14.0], [1.550476398E12, 9.0], [1.550475972E12, 8.0], [1.550476144E12, 9.0], [1.550475931E12, 99.0], [1.550476316E12, 2.0], [1.550476275E12, 8.0], [1.550476447E12, 11.0], [1.550476021E12, 6.0], [1.550476513E12, 118.0], [1.550476087E12, 120.0], [1.550476259E12, 2.0], [1.550476218E12, 8.0], [1.55047639E12, 125.0], [1.550475964E12, 132.0], [1.550475923E12, 30.0], [1.550476095E12, 9.0], [1.550475948E12, 123.0], [1.550476161E12, 8.0], [1.550476333E12, 9.0], [1.550476505E12, 2.0], [1.550476079E12, 4.0], [1.550476464E12, 11.0], [1.550476038E12, 10.0], [1.55047621E12, 37.0], [1.550475956E12, 133.0], [1.550476341E12, 6.0], [1.55047628E12, 6.0], [1.550476452E12, 135.0], [1.550476026E12, 120.0], [1.550475944E12, 122.0], [1.550476157E12, 8.0], [1.550476329E12, 106.0], [1.550476395E12, 8.0], [1.550475969E12, 8.0], [1.550475928E12, 79.0], [1.550476141E12, 2.0], [1.5504761E12, 8.0], [1.550476272E12, 9.0], [1.550476444E12, 3.0], [1.550476018E12, 4.0], [1.550476403E12, 12.0], [1.550475977E12, 8.0], [1.550475936E12, 113.0], [1.550476149E12, 55.0], [1.550476215E12, 6.0], [1.550476387E12, 10.0], [1.550475961E12, 129.0], [1.55047592E12, 1.0], [1.550476133E12, 2.0], [1.550476518E12, 8.0], [1.550476092E12, 9.0], [1.550476264E12, 7.0], [1.550476223E12, 6.0], [1.550476502E12, 2.0], [1.550476461E12, 9.0], [1.550476035E12, 8.0], [1.550476207E12, 80.0], [1.550475953E12, 164.0], [1.550476338E12, 5.0], [1.55047651E12, 12.0], [1.550476084E12, 14.0], [1.55047615E12, 8.0], [1.550475937E12, 121.0], [1.550476322E12, 4.0], [1.550476281E12, 11.0], [1.550476453E12, 41.0], [1.550476027E12, 77.0], [1.550476199E12, 2.0], [1.550476158E12, 9.0], [1.550475945E12, 126.0], [1.55047633E12, 158.0], [1.550476396E12, 9.0], [1.55047597E12, 9.0], [1.550476142E12, 3.0], [1.550475929E12, 90.0], [1.550476101E12, 8.0], [1.550476273E12, 10.0], [1.550476019E12, 2.0], [1.550476404E12, 6.0], [1.550475978E12, 8.0], [1.550476216E12, 10.0], [1.550476388E12, 13.0], [1.550475962E12, 127.0], [1.550476134E12, 1.0], [1.550475921E12, 11.0], [1.550476519E12, 9.0], [1.550476093E12, 9.0], [1.550476265E12, 8.0], [1.550476224E12, 1.0], [1.550476437E12, 3.0], [1.550476331E12, 60.0], [1.550476077E12, 2.0], [1.550476462E12, 8.0], [1.550476036E12, 9.0], [1.550476208E12, 133.0], [1.550475954E12, 139.0], [1.550476339E12, 11.0], [1.550476511E12, 72.0], [1.550476085E12, 30.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.55047652E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.550475921E12, "maxY": 174.0, "series": [{"data": [[1.550475937E12, 130.0], [1.550475938E12, 118.0], [1.550475939E12, 124.0], [1.55047594E12, 114.0], [1.550475941E12, 132.0], [1.550475942E12, 121.0], [1.550475943E12, 106.0], [1.550475944E12, 110.0], [1.550475945E12, 125.0], [1.550475946E12, 123.0], [1.550475926E12, 53.0], [1.550475927E12, 61.0], [1.550475928E12, 70.0], [1.550475929E12, 86.0], [1.55047593E12, 89.0], [1.550475931E12, 91.0], [1.550475932E12, 86.0], [1.550475933E12, 102.0], [1.550475934E12, 72.0], [1.550475935E12, 89.0], [1.550475936E12, 93.0], [1.550475958E12, 120.0], [1.550475959E12, 129.0], [1.55047596E12, 135.0], [1.550475961E12, 114.0], [1.550475962E12, 123.0], [1.550475963E12, 130.0], [1.550475921E12, 4.0], [1.550475964E12, 122.0], [1.550475922E12, 13.0], [1.550475965E12, 111.0], [1.550475923E12, 27.0], [1.550475966E12, 80.0], [1.550475924E12, 34.0], [1.550475967E12, 5.0], [1.550475925E12, 48.0], [1.550475947E12, 137.0], [1.550475948E12, 101.0], [1.550475949E12, 161.0], [1.55047595E12, 137.0], [1.550475951E12, 139.0], [1.550475952E12, 101.0], [1.550475953E12, 168.0], [1.550475954E12, 127.0], [1.550475955E12, 132.0], [1.550475956E12, 105.0], [1.550475957E12, 148.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.550476278E12, 11.0], [1.55047645E12, 59.0], [1.550476024E12, 19.0], [1.550476581E12, 3.0], [1.550476155E12, 9.0], [1.550476327E12, 10.0], [1.550476073E12, 2.0], [1.550476458E12, 7.0], [1.550476032E12, 9.0], [1.550476524E12, 9.0], [1.550476098E12, 8.0], [1.55047627E12, 61.0], [1.550476016E12, 2.0], [1.550476401E12, 7.0], [1.550476573E12, 156.0], [1.550476147E12, 120.0], [1.550476385E12, 4.0], [1.550476344E12, 7.0], [1.550476516E12, 9.0], [1.55047609E12, 8.0], [1.550476262E12, 2.0], [1.550476221E12, 8.0], [1.550476393E12, 14.0], [1.550476565E12, 5.0], [1.550476459E12, 8.0], [1.550476033E12, 8.0], [1.550476205E12, 12.0], [1.550476336E12, 9.0], [1.550476508E12, 2.0], [1.550476082E12, 11.0], [1.550476041E12, 5.0], [1.550476213E12, 9.0], [1.550476279E12, 9.0], [1.550476451E12, 91.0], [1.550476025E12, 136.0], [1.550476156E12, 7.0], [1.550476328E12, 23.0], [1.550476566E12, 1.0], [1.55047614E12, 6.0], [1.550476525E12, 7.0], [1.550476099E12, 9.0], [1.550476271E12, 14.0], [1.550476443E12, 4.0], [1.550476402E12, 9.0], [1.550476574E12, 60.0], [1.550476148E12, 100.0], [1.55047632E12, 2.0], [1.550476214E12, 8.0], [1.550476386E12, 11.0], [1.550476558E12, 3.0], [1.550476345E12, 4.0], [1.550476517E12, 8.0], [1.550476091E12, 10.0], [1.550476263E12, 1.0], [1.550476222E12, 9.0], [1.550476394E12, 11.0], [1.55047646E12, 9.0], [1.550476034E12, 9.0], [1.550476206E12, 13.0], [1.550476337E12, 7.0], [1.550476509E12, 15.0], [1.550476083E12, 7.0], [1.550476255E12, 3.0], [1.550476022E12, 4.0], [1.550476194E12, 3.0], [1.550476579E12, 8.0], [1.550476153E12, 8.0], [1.550476325E12, 11.0], [1.550476284E12, 4.0], [1.550476456E12, 9.0], [1.55047603E12, 10.0], [1.550476268E12, 87.0], [1.550476399E12, 8.0], [1.550476571E12, 34.0], [1.550476145E12, 14.0], [1.550476276E12, 8.0], [1.550476448E12, 12.0], [1.550476342E12, 12.0], [1.550476514E12, 35.0], [1.550476088E12, 57.0], [1.550476219E12, 7.0], [1.550476391E12, 105.0], [1.550476563E12, 2.0], [1.550476522E12, 10.0], [1.550476096E12, 8.0], [1.550476203E12, 4.0], [1.550476162E12, 8.0], [1.550476334E12, 10.0], [1.550476506E12, 1.0], [1.55047608E12, 2.0], [1.550476465E12, 8.0], [1.550476039E12, 8.0], [1.550476211E12, 11.0], [1.550476383E12, 4.0], [1.550476449E12, 13.0], [1.550476023E12, 14.0], [1.55047658E12, 8.0], [1.550476154E12, 9.0], [1.550476326E12, 9.0], [1.550476498E12, 3.0], [1.550476072E12, 1.0], [1.550476457E12, 8.0], [1.550476031E12, 8.0], [1.550476523E12, 7.0], [1.550476097E12, 8.0], [1.550476269E12, 174.0], [1.550476441E12, 2.0], [1.5504764E12, 10.0], [1.550476572E12, 71.0], [1.550476146E12, 79.0], [1.550476277E12, 6.0], [1.550476343E12, 7.0], [1.550476515E12, 11.0], [1.550476089E12, 9.0], [1.550476261E12, 4.0], [1.55047622E12, 10.0], [1.550476392E12, 36.0], [1.550476138E12, 2.0], [1.550476204E12, 11.0], [1.550476376E12, 3.0], [1.550476163E12, 1.0], [1.550476335E12, 8.0], [1.550476507E12, 13.0], [1.550476081E12, 3.0], [1.550476466E12, 7.0], [1.55047604E12, 8.0], [1.550476212E12, 9.0], [1.550476577E12, 10.0], [1.550476151E12, 8.0], [1.550476323E12, 2.0], [1.550476282E12, 8.0], [1.550476454E12, 18.0], [1.550476028E12, 11.0], [1.5504762E12, 4.0], [1.550476159E12, 8.0], [1.550476012E12, 3.0], [1.550476397E12, 9.0], [1.550476569E12, 9.0], [1.550476143E12, 10.0], [1.550476102E12, 3.0], [1.550476315E12, 3.0], [1.550476274E12, 8.0], [1.550476446E12, 7.0], [1.550476405E12, 8.0], [1.550476086E12, 122.0], [1.550476217E12, 8.0], [1.550476389E12, 57.0], [1.55047652E12, 5.0], [1.550476094E12, 8.0], [1.550476266E12, 14.0], [1.550476332E12, 14.0], [1.550476504E12, 4.0], [1.550476463E12, 11.0], [1.550476037E12, 8.0], [1.550476209E12, 94.0], [1.550476381E12, 2.0], [1.55047634E12, 8.0], [1.550476512E12, 127.0], [1.550476406E12, 1.0], [1.550476578E12, 9.0], [1.550476152E12, 9.0], [1.550476324E12, 3.0], [1.550476283E12, 9.0], [1.550476455E12, 9.0], [1.550476029E12, 9.0], [1.550476201E12, 2.0], [1.55047616E12, 8.0], [1.550476267E12, 16.0], [1.550476398E12, 7.0], [1.55047657E12, 13.0], [1.550476144E12, 11.0], [1.550476275E12, 8.0], [1.550476447E12, 8.0], [1.550476021E12, 12.0], [1.550476513E12, 96.0], [1.550476087E12, 107.0], [1.550476259E12, 2.0], [1.550476218E12, 9.0], [1.55047639E12, 137.0], [1.550476521E12, 10.0], [1.550476095E12, 9.0], [1.550476161E12, 8.0], [1.550476333E12, 7.0], [1.550476505E12, 2.0], [1.550476079E12, 4.0], [1.550476464E12, 7.0], [1.550476038E12, 9.0], [1.55047621E12, 17.0], [1.550476382E12, 2.0], [1.550476341E12, 6.0], [1.55047628E12, 6.0], [1.550476452E12, 142.0], [1.550476026E12, 125.0], [1.550476198E12, 1.0], [1.550476157E12, 9.0], [1.550476329E12, 138.0], [1.550476395E12, 5.0], [1.550476567E12, 4.0], [1.550476526E12, 10.0], [1.5504761E12, 9.0], [1.550476272E12, 9.0], [1.550476444E12, 2.0], [1.550476018E12, 4.0], [1.550476403E12, 10.0], [1.550476575E12, 27.0], [1.550476149E12, 40.0], [1.550476215E12, 8.0], [1.550476387E12, 11.0], [1.550476133E12, 3.0], [1.550476518E12, 8.0], [1.550476092E12, 9.0], [1.550476264E12, 12.0], [1.550476223E12, 6.0], [1.550476502E12, 2.0], [1.550476461E12, 9.0], [1.550476035E12, 8.0], [1.550476207E12, 107.0], [1.550476338E12, 6.0], [1.55047651E12, 14.0], [1.550476084E12, 12.0], [1.55047615E12, 10.0], [1.550476322E12, 4.0], [1.550476281E12, 11.0], [1.550476453E12, 40.0], [1.550476027E12, 61.0], [1.550476199E12, 1.0], [1.550476158E12, 9.0], [1.55047633E12, 126.0], [1.550476396E12, 9.0], [1.550476568E12, 10.0], [1.550476142E12, 4.0], [1.550476527E12, 4.0], [1.550476101E12, 7.0], [1.550476273E12, 10.0], [1.550476019E12, 2.0], [1.550476404E12, 7.0], [1.550476576E12, 9.0], [1.550476216E12, 8.0], [1.550476388E12, 13.0], [1.550476519E12, 10.0], [1.550476093E12, 8.0], [1.550476265E12, 3.0], [1.550476437E12, 3.0], [1.550476331E12, 52.0], [1.550476077E12, 2.0], [1.550476462E12, 7.0], [1.550476036E12, 8.0], [1.550476208E12, 121.0], [1.550476339E12, 12.0], [1.550476511E12, 78.0], [1.550476085E12, 57.0]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.550476581E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.550475921E12, "maxY": 174.0, "series": [{"data": [[1.550476278E12, 11.0], [1.55047645E12, 59.0], [1.550476024E12, 19.0], [1.550476581E12, 3.0], [1.550476155E12, 9.0], [1.550476327E12, 10.0], [1.550476073E12, 2.0], [1.550476458E12, 7.0], [1.550476032E12, 9.0], [1.550476524E12, 9.0], [1.550476098E12, 8.0], [1.55047627E12, 61.0], [1.550476016E12, 2.0], [1.550476401E12, 7.0], [1.550476573E12, 156.0], [1.550476147E12, 120.0], [1.550476385E12, 4.0], [1.550476344E12, 7.0], [1.550476516E12, 9.0], [1.55047609E12, 8.0], [1.550476262E12, 2.0], [1.550476221E12, 8.0], [1.550476393E12, 14.0], [1.550475967E12, 2.0], [1.550476565E12, 5.0], [1.550476459E12, 8.0], [1.550476033E12, 8.0], [1.550476205E12, 12.0], [1.550475951E12, 2.0], [1.550476336E12, 9.0], [1.550476508E12, 2.0], [1.550476082E12, 11.0], [1.550476041E12, 5.0], [1.550476213E12, 9.0], [1.550476279E12, 9.0], [1.550476451E12, 91.0], [1.550476025E12, 136.0], [1.550476156E12, 7.0], [1.550476328E12, 23.0], [1.550476566E12, 1.0], [1.55047614E12, 6.0], [1.550475927E12, 4.0], [1.550476525E12, 7.0], [1.550476099E12, 9.0], [1.550476271E12, 14.0], [1.550476443E12, 4.0], [1.550476402E12, 9.0], [1.550476574E12, 60.0], [1.550476148E12, 100.0], [1.550475935E12, 2.0], [1.55047632E12, 2.0], [1.550476214E12, 8.0], [1.550476386E12, 11.0], [1.550476558E12, 3.0], [1.550476345E12, 4.0], [1.550476517E12, 8.0], [1.550476091E12, 10.0], [1.550476263E12, 1.0], [1.550476222E12, 9.0], [1.550476394E12, 11.0], [1.55047646E12, 9.0], [1.550476034E12, 9.0], [1.550476206E12, 13.0], [1.550475952E12, 2.0], [1.550476337E12, 7.0], [1.550476509E12, 15.0], [1.550476083E12, 7.0], [1.550476255E12, 3.0], [1.550476022E12, 4.0], [1.550476194E12, 3.0], [1.550476579E12, 8.0], [1.550476153E12, 8.0], [1.550476325E12, 11.0], [1.550476284E12, 4.0], [1.550476456E12, 9.0], [1.55047603E12, 10.0], [1.550476268E12, 87.0], [1.550476399E12, 8.0], [1.550476571E12, 34.0], [1.550476145E12, 14.0], [1.550476276E12, 8.0], [1.550476448E12, 12.0], [1.550476342E12, 12.0], [1.550476514E12, 35.0], [1.550476088E12, 57.0], [1.550476219E12, 7.0], [1.550476391E12, 105.0], [1.550476563E12, 2.0], [1.550475924E12, 3.0], [1.550476522E12, 10.0], [1.550476096E12, 8.0], [1.550476203E12, 4.0], [1.550476162E12, 8.0], [1.550475949E12, 2.0], [1.550476334E12, 10.0], [1.550476506E12, 1.0], [1.55047608E12, 2.0], [1.550476465E12, 8.0], [1.550476039E12, 8.0], [1.550476211E12, 11.0], [1.550476383E12, 4.0], [1.550475957E12, 1.0], [1.550476449E12, 13.0], [1.550476023E12, 14.0], [1.55047658E12, 8.0], [1.550476154E12, 9.0], [1.550476326E12, 9.0], [1.550476498E12, 3.0], [1.550476072E12, 1.0], [1.550476457E12, 8.0], [1.550476031E12, 8.0], [1.550476523E12, 7.0], [1.550476097E12, 8.0], [1.550476269E12, 174.0], [1.550476441E12, 2.0], [1.5504764E12, 10.0], [1.550476572E12, 71.0], [1.550476146E12, 79.0], [1.550475933E12, 4.0], [1.550476277E12, 6.0], [1.550476343E12, 7.0], [1.550476515E12, 11.0], [1.550476089E12, 9.0], [1.550476261E12, 4.0], [1.55047622E12, 10.0], [1.550476392E12, 36.0], [1.550476138E12, 2.0], [1.550475925E12, 4.0], [1.550476204E12, 11.0], [1.550476376E12, 3.0], [1.550476163E12, 1.0], [1.550476335E12, 8.0], [1.550476507E12, 13.0], [1.550476081E12, 3.0], [1.550476466E12, 7.0], [1.55047604E12, 8.0], [1.550476212E12, 9.0], [1.550476577E12, 10.0], [1.550476151E12, 8.0], [1.550476323E12, 2.0], [1.550476282E12, 8.0], [1.550476454E12, 18.0], [1.550476028E12, 11.0], [1.5504762E12, 4.0], [1.550476159E12, 8.0], [1.550476012E12, 3.0], [1.550476397E12, 9.0], [1.550476569E12, 9.0], [1.55047593E12, 1.0], [1.550476143E12, 10.0], [1.550476102E12, 3.0], [1.550476315E12, 3.0], [1.550476274E12, 8.0], [1.550476446E12, 7.0], [1.550476405E12, 8.0], [1.550476086E12, 122.0], [1.550476217E12, 8.0], [1.550476389E12, 57.0], [1.550475963E12, 2.0], [1.55047652E12, 5.0], [1.550476094E12, 8.0], [1.550476266E12, 14.0], [1.550476332E12, 14.0], [1.550476504E12, 4.0], [1.550476463E12, 11.0], [1.550476037E12, 8.0], [1.550476209E12, 94.0], [1.550476381E12, 2.0], [1.55047634E12, 8.0], [1.550476512E12, 127.0], [1.550476406E12, 1.0], [1.550476578E12, 9.0], [1.550476152E12, 9.0], [1.550475939E12, 3.0], [1.550476324E12, 3.0], [1.550476283E12, 9.0], [1.550476455E12, 9.0], [1.550476029E12, 9.0], [1.550476201E12, 2.0], [1.55047616E12, 8.0], [1.550476267E12, 16.0], [1.550476398E12, 7.0], [1.55047657E12, 13.0], [1.550476144E12, 11.0], [1.550476275E12, 8.0], [1.550476447E12, 8.0], [1.550476021E12, 12.0], [1.550476513E12, 96.0], [1.550476087E12, 107.0], [1.550476259E12, 2.0], [1.550476218E12, 9.0], [1.55047639E12, 137.0], [1.550475964E12, 1.0], [1.550475923E12, 1.0], [1.550476521E12, 10.0], [1.550476095E12, 9.0], [1.550476161E12, 8.0], [1.550476333E12, 7.0], [1.550476505E12, 2.0], [1.550476079E12, 4.0], [1.550476464E12, 7.0], [1.550476038E12, 9.0], [1.55047621E12, 17.0], [1.550476382E12, 2.0], [1.550476341E12, 6.0], [1.55047628E12, 6.0], [1.550476452E12, 142.0], [1.550476026E12, 125.0], [1.550476198E12, 1.0], [1.550476157E12, 9.0], [1.550476329E12, 138.0], [1.550476395E12, 5.0], [1.550476567E12, 4.0], [1.550475928E12, 2.0], [1.550476526E12, 10.0], [1.5504761E12, 9.0], [1.550476272E12, 9.0], [1.550476444E12, 2.0], [1.550476018E12, 4.0], [1.550476403E12, 10.0], [1.550476575E12, 27.0], [1.550476149E12, 40.0], [1.550476215E12, 8.0], [1.550476387E12, 11.0], [1.550476133E12, 3.0], [1.550476518E12, 8.0], [1.550476092E12, 9.0], [1.550476264E12, 12.0], [1.550476223E12, 6.0], [1.550476502E12, 2.0], [1.550476461E12, 9.0], [1.550476035E12, 8.0], [1.550476207E12, 107.0], [1.550475953E12, 1.0], [1.550476338E12, 6.0], [1.55047651E12, 14.0], [1.550476084E12, 12.0], [1.55047615E12, 10.0], [1.550476322E12, 4.0], [1.550476281E12, 11.0], [1.550476453E12, 40.0], [1.550476027E12, 61.0], [1.550476199E12, 1.0], [1.550476158E12, 9.0], [1.55047633E12, 126.0], [1.550476396E12, 9.0], [1.550476568E12, 10.0], [1.550476142E12, 4.0], [1.550475929E12, 3.0], [1.550476527E12, 4.0], [1.550476101E12, 7.0], [1.550476273E12, 10.0], [1.550476019E12, 2.0], [1.550476404E12, 7.0], [1.550476576E12, 9.0], [1.550476216E12, 8.0], [1.550476388E12, 13.0], [1.550475962E12, 2.0], [1.550476519E12, 10.0], [1.550476093E12, 8.0], [1.550476265E12, 3.0], [1.550476437E12, 3.0], [1.550476331E12, 52.0], [1.550476077E12, 2.0], [1.550476462E12, 7.0], [1.550476036E12, 8.0], [1.550476208E12, 121.0], [1.550476339E12, 12.0], [1.550476511E12, 78.0], [1.550476085E12, 57.0]], "isOverall": false, "label": "Get availability-failure", "isController": false}, {"data": [[1.550475937E12, 130.0], [1.550475938E12, 118.0], [1.550475939E12, 121.0], [1.55047594E12, 114.0], [1.550475941E12, 132.0], [1.550475942E12, 121.0], [1.550475943E12, 106.0], [1.550475944E12, 110.0], [1.550475945E12, 125.0], [1.550475946E12, 123.0], [1.550475926E12, 53.0], [1.550475927E12, 57.0], [1.550475928E12, 68.0], [1.550475929E12, 83.0], [1.55047593E12, 88.0], [1.550475931E12, 91.0], [1.550475932E12, 86.0], [1.550475933E12, 98.0], [1.550475934E12, 72.0], [1.550475935E12, 87.0], [1.550475936E12, 93.0], [1.550475958E12, 120.0], [1.550475959E12, 129.0], [1.55047596E12, 135.0], [1.550475961E12, 114.0], [1.550475962E12, 121.0], [1.550475963E12, 128.0], [1.550475921E12, 4.0], [1.550475964E12, 121.0], [1.550475922E12, 13.0], [1.550475965E12, 111.0], [1.550475923E12, 26.0], [1.550475966E12, 80.0], [1.550475924E12, 31.0], [1.550475967E12, 3.0], [1.550475925E12, 44.0], [1.550475947E12, 137.0], [1.550475948E12, 101.0], [1.550475949E12, 159.0], [1.55047595E12, 137.0], [1.550475951E12, 137.0], [1.550475952E12, 99.0], [1.550475953E12, 167.0], [1.550475954E12, 127.0], [1.550475955E12, 132.0], [1.550475956E12, 105.0], [1.550475957E12, 147.0]], "isOverall": false, "label": "Get availability-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.550476581E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.550475921E12, "maxY": 174.0, "series": [{"data": [[1.550475937E12, 130.0], [1.550475938E12, 118.0], [1.550475939E12, 121.0], [1.55047594E12, 114.0], [1.550475941E12, 132.0], [1.550475942E12, 121.0], [1.550475943E12, 106.0], [1.550475944E12, 110.0], [1.550475945E12, 125.0], [1.550475946E12, 123.0], [1.550475926E12, 53.0], [1.550475927E12, 57.0], [1.550475928E12, 68.0], [1.550475929E12, 83.0], [1.55047593E12, 88.0], [1.550475931E12, 91.0], [1.550475932E12, 86.0], [1.550475933E12, 98.0], [1.550475934E12, 72.0], [1.550475935E12, 87.0], [1.550475936E12, 93.0], [1.550475958E12, 120.0], [1.550475959E12, 129.0], [1.55047596E12, 135.0], [1.550475961E12, 114.0], [1.550475962E12, 121.0], [1.550475963E12, 128.0], [1.550475921E12, 4.0], [1.550475964E12, 121.0], [1.550475922E12, 13.0], [1.550475965E12, 111.0], [1.550475923E12, 26.0], [1.550475966E12, 80.0], [1.550475924E12, 31.0], [1.550475967E12, 3.0], [1.550475925E12, 44.0], [1.550475947E12, 137.0], [1.550475948E12, 101.0], [1.550475949E12, 159.0], [1.55047595E12, 137.0], [1.550475951E12, 137.0], [1.550475952E12, 99.0], [1.550475953E12, 167.0], [1.550475954E12, 127.0], [1.550475955E12, 132.0], [1.550475956E12, 105.0], [1.550475957E12, 147.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.550476278E12, 11.0], [1.55047645E12, 59.0], [1.550476024E12, 19.0], [1.550476581E12, 3.0], [1.550476155E12, 9.0], [1.550476327E12, 10.0], [1.550476073E12, 2.0], [1.550476458E12, 7.0], [1.550476032E12, 9.0], [1.550476524E12, 9.0], [1.550476098E12, 8.0], [1.55047627E12, 61.0], [1.550476016E12, 2.0], [1.550476401E12, 7.0], [1.550476573E12, 156.0], [1.550476147E12, 120.0], [1.550476385E12, 4.0], [1.550476344E12, 7.0], [1.550476516E12, 9.0], [1.55047609E12, 8.0], [1.550476262E12, 2.0], [1.550476221E12, 8.0], [1.550476393E12, 14.0], [1.550475967E12, 2.0], [1.550476565E12, 5.0], [1.550476459E12, 8.0], [1.550476033E12, 8.0], [1.550476205E12, 12.0], [1.550475951E12, 2.0], [1.550476336E12, 9.0], [1.550476508E12, 2.0], [1.550476082E12, 11.0], [1.550476041E12, 5.0], [1.550476213E12, 9.0], [1.550476279E12, 9.0], [1.550476451E12, 91.0], [1.550476025E12, 136.0], [1.550476156E12, 7.0], [1.550476328E12, 23.0], [1.550476566E12, 1.0], [1.55047614E12, 6.0], [1.550475927E12, 4.0], [1.550476525E12, 7.0], [1.550476099E12, 9.0], [1.550476271E12, 14.0], [1.550476443E12, 4.0], [1.550476402E12, 9.0], [1.550476574E12, 60.0], [1.550476148E12, 100.0], [1.550475935E12, 2.0], [1.55047632E12, 2.0], [1.550476214E12, 8.0], [1.550476386E12, 11.0], [1.550476558E12, 3.0], [1.550476345E12, 4.0], [1.550476517E12, 8.0], [1.550476091E12, 10.0], [1.550476263E12, 1.0], [1.550476222E12, 9.0], [1.550476394E12, 11.0], [1.55047646E12, 9.0], [1.550476034E12, 9.0], [1.550476206E12, 13.0], [1.550475952E12, 2.0], [1.550476337E12, 7.0], [1.550476509E12, 15.0], [1.550476083E12, 7.0], [1.550476255E12, 3.0], [1.550476022E12, 4.0], [1.550476194E12, 3.0], [1.550476579E12, 8.0], [1.550476153E12, 8.0], [1.550476325E12, 11.0], [1.550476284E12, 4.0], [1.550476456E12, 9.0], [1.55047603E12, 10.0], [1.550476268E12, 87.0], [1.550476399E12, 8.0], [1.550476571E12, 34.0], [1.550476145E12, 14.0], [1.550476276E12, 8.0], [1.550476448E12, 12.0], [1.550476342E12, 12.0], [1.550476514E12, 35.0], [1.550476088E12, 57.0], [1.550476219E12, 7.0], [1.550476391E12, 105.0], [1.550476563E12, 2.0], [1.550475924E12, 3.0], [1.550476522E12, 10.0], [1.550476096E12, 8.0], [1.550476203E12, 4.0], [1.550476162E12, 8.0], [1.550475949E12, 2.0], [1.550476334E12, 10.0], [1.550476506E12, 1.0], [1.55047608E12, 2.0], [1.550476465E12, 8.0], [1.550476039E12, 8.0], [1.550476211E12, 11.0], [1.550476383E12, 4.0], [1.550475957E12, 1.0], [1.550476449E12, 13.0], [1.550476023E12, 14.0], [1.55047658E12, 8.0], [1.550476154E12, 9.0], [1.550476326E12, 9.0], [1.550476498E12, 3.0], [1.550476072E12, 1.0], [1.550476457E12, 8.0], [1.550476031E12, 8.0], [1.550476523E12, 7.0], [1.550476097E12, 8.0], [1.550476269E12, 174.0], [1.550476441E12, 2.0], [1.5504764E12, 10.0], [1.550476572E12, 71.0], [1.550476146E12, 79.0], [1.550475933E12, 4.0], [1.550476277E12, 6.0], [1.550476343E12, 7.0], [1.550476515E12, 11.0], [1.550476089E12, 9.0], [1.550476261E12, 4.0], [1.55047622E12, 10.0], [1.550476392E12, 36.0], [1.550476138E12, 2.0], [1.550475925E12, 4.0], [1.550476204E12, 11.0], [1.550476376E12, 3.0], [1.550476163E12, 1.0], [1.550476335E12, 8.0], [1.550476507E12, 13.0], [1.550476081E12, 3.0], [1.550476466E12, 7.0], [1.55047604E12, 8.0], [1.550476212E12, 9.0], [1.550476577E12, 10.0], [1.550476151E12, 8.0], [1.550476323E12, 2.0], [1.550476282E12, 8.0], [1.550476454E12, 18.0], [1.550476028E12, 11.0], [1.5504762E12, 4.0], [1.550476159E12, 8.0], [1.550476012E12, 3.0], [1.550476397E12, 9.0], [1.550476569E12, 9.0], [1.55047593E12, 1.0], [1.550476143E12, 10.0], [1.550476102E12, 3.0], [1.550476315E12, 3.0], [1.550476274E12, 8.0], [1.550476446E12, 7.0], [1.550476405E12, 8.0], [1.550476086E12, 122.0], [1.550476217E12, 8.0], [1.550476389E12, 57.0], [1.550475963E12, 2.0], [1.55047652E12, 5.0], [1.550476094E12, 8.0], [1.550476266E12, 14.0], [1.550476332E12, 14.0], [1.550476504E12, 4.0], [1.550476463E12, 11.0], [1.550476037E12, 8.0], [1.550476209E12, 94.0], [1.550476381E12, 2.0], [1.55047634E12, 8.0], [1.550476512E12, 127.0], [1.550476406E12, 1.0], [1.550476578E12, 9.0], [1.550476152E12, 9.0], [1.550475939E12, 3.0], [1.550476324E12, 3.0], [1.550476283E12, 9.0], [1.550476455E12, 9.0], [1.550476029E12, 9.0], [1.550476201E12, 2.0], [1.55047616E12, 8.0], [1.550476267E12, 16.0], [1.550476398E12, 7.0], [1.55047657E12, 13.0], [1.550476144E12, 11.0], [1.550476275E12, 8.0], [1.550476447E12, 8.0], [1.550476021E12, 12.0], [1.550476513E12, 96.0], [1.550476087E12, 107.0], [1.550476259E12, 2.0], [1.550476218E12, 9.0], [1.55047639E12, 137.0], [1.550475964E12, 1.0], [1.550475923E12, 1.0], [1.550476521E12, 10.0], [1.550476095E12, 9.0], [1.550476161E12, 8.0], [1.550476333E12, 7.0], [1.550476505E12, 2.0], [1.550476079E12, 4.0], [1.550476464E12, 7.0], [1.550476038E12, 9.0], [1.55047621E12, 17.0], [1.550476382E12, 2.0], [1.550476341E12, 6.0], [1.55047628E12, 6.0], [1.550476452E12, 142.0], [1.550476026E12, 125.0], [1.550476198E12, 1.0], [1.550476157E12, 9.0], [1.550476329E12, 138.0], [1.550476395E12, 5.0], [1.550476567E12, 4.0], [1.550475928E12, 2.0], [1.550476526E12, 10.0], [1.5504761E12, 9.0], [1.550476272E12, 9.0], [1.550476444E12, 2.0], [1.550476018E12, 4.0], [1.550476403E12, 10.0], [1.550476575E12, 27.0], [1.550476149E12, 40.0], [1.550476215E12, 8.0], [1.550476387E12, 11.0], [1.550476133E12, 3.0], [1.550476518E12, 8.0], [1.550476092E12, 9.0], [1.550476264E12, 12.0], [1.550476223E12, 6.0], [1.550476502E12, 2.0], [1.550476461E12, 9.0], [1.550476035E12, 8.0], [1.550476207E12, 107.0], [1.550475953E12, 1.0], [1.550476338E12, 6.0], [1.55047651E12, 14.0], [1.550476084E12, 12.0], [1.55047615E12, 10.0], [1.550476322E12, 4.0], [1.550476281E12, 11.0], [1.550476453E12, 40.0], [1.550476027E12, 61.0], [1.550476199E12, 1.0], [1.550476158E12, 9.0], [1.55047633E12, 126.0], [1.550476396E12, 9.0], [1.550476568E12, 10.0], [1.550476142E12, 4.0], [1.550475929E12, 3.0], [1.550476527E12, 4.0], [1.550476101E12, 7.0], [1.550476273E12, 10.0], [1.550476019E12, 2.0], [1.550476404E12, 7.0], [1.550476576E12, 9.0], [1.550476216E12, 8.0], [1.550476388E12, 13.0], [1.550475962E12, 2.0], [1.550476519E12, 10.0], [1.550476093E12, 8.0], [1.550476265E12, 3.0], [1.550476437E12, 3.0], [1.550476331E12, 52.0], [1.550476077E12, 2.0], [1.550476462E12, 7.0], [1.550476036E12, 8.0], [1.550476208E12, 121.0], [1.550476339E12, 12.0], [1.550476511E12, 78.0], [1.550476085E12, 57.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.550476581E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

